<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Tools</name>
  </assembly>
  <members>
    <member name="T:IndianaPark.Tools.Extensions">
      <summary>
            Classe statica contenente gli Extension Methods personali
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.Checksum(System.IO.FileStream,System.Security.Cryptography.HashAlgorithm)">
      <summary>
            Calcola il checksum di un file con l'algoritmo hash specificato
            </summary>
      <param name="stream">L'oggetto FileStream che rappresenta il file</param>
      <param name="hash">L'algoritmo HASH da utilizzare</param>
      <returns>Il valore dell'hash calcolato su tutto lo stream</returns>
      <exception cref="T:System.ArgumentNullException">Se viene passato come hash il valore <c>null</c>.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ImplementsInterface``1(``0,System.Type)">
      <summary>
            Controlla se un determinata istanza di un oggetto implementa l'interfaccia specificata
            </summary>
      <param name="source">L'oggetto da controllare</param>
      <param name="interfaccia">L'interfaccia da ricercare</param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:IndianaPark.Tools.Extensions.ImplementsInterface``1(``0,System.Type)"]</p>
      </typeparam>
      <returns>
        <c>true</c> se l'oggetto implementa l'interfaccia <paramref name="interfaccia" />, <c>false</c> altrimenti
            </returns>
      <exception cref="T:System.ArgumentNullException">Se non viene specificata nessuna interfaccia.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.IsA``1(``0,System.Type)">
      <summary>
            Controlla se un determinata istanza di un oggetto è un oggetto di un altro tipo
            </summary>
      <param name="source">L'oggetto da controllare</param>
      <param name="oggetto">L'oggetto da ricercare</param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:IndianaPark.Tools.Extensions.IsA``1(``0,System.Type)"]</p>
      </typeparam>
      <returns>
        <c>true</c> se l'oggetto deriva, in un qualche livello, da <paramref name="oggetto" />, <c>false</c> altrimenti
            </returns>
      <exception cref="T:System.ArgumentNullException">Se non viene specificata nessuna interfaccia.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.KeyOf``2(System.Collections.Generic.IDictionary{``0,``1},``1)">
      <summary>
            Trova la chiave associata ad un valore in un oggetto <see cref="T:System.Collections.Generic.IDictionary`2" /></summary>
      <param name="source">Dizionario in cui cercare</param>
      <param name="value">Il valore da cercare</param>
      <typeparam name="TKey">Tipo delle chiavi nel dizionario.</typeparam>
      <typeparam name="TValue">Tipo dei valori nel dizionario.</typeparam>
      <returns>La chiave appartenente al valorce passato, oppure <c>null</c> se non trovato.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
      <param name="obj">L'oggetto da convertire</param>
      <returns>
            Un <c>byte[]</c> contente <paramref name="obj" /> serializzato o <c>null</c> se l'oggetto non è
            serializzabile.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToObject``1(System.Byte[])">
      <summary>
            Converte un array di bytes in un oggetto
            </summary>
      <param name="arrBytes">L'array di bytes da convertire</param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:IndianaPark.Tools.Extensions.ToObject``1(System.Byte[])"]</p>
      </typeparam>
      <returns>
            Restituisce l'oggetto contenuto in <paramref name="arrBytes" />, oppure <c>null</c> in caso
            di problemi di deserializzazione
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.StartRandom">
      <summary>
            Oggetto per ottenere numeri casuali in cui l'inizializzazione viene effettuata
            in automatico al momento della creazione dell'istanza
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.StartRandom" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.StartRandom" /> class</summary>
      <param name="Seed">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="Seed"/&gt; documentation for "M:IndianaPark.Tools.StartRandom.#ctor(System.Int32)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.Next">
      <summary>
            Returns a nonnegative random number.
            </summary>
      <returns>
            A 32-bit signed integer greater than or equal to zero and less than <see cref="F:System.Int32.MaxValue" />.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.Next(System.Int32)">
      <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
      <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue" /> must be greater than or equal to zero.</param>
      <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue" />; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue" />. However, if <paramref name="maxValue" /> equals zero, <paramref name="maxValue" /> is returned.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxValue" /> is less than zero. </exception>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.Next(System.Int32,System.Int32)">
      <summary>
            Returns a random number within a specified range.
            </summary>
      <param name="minValue">The inclusive lower bound of the random number returned.</param>
      <param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue" /> must be greater than or equal to <paramref name="minValue" />.</param>
      <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue" /> and less than <paramref name="maxValue" />; that is, the range of return values includes <paramref name="minValue" /> but not <paramref name="maxValue" />. If <paramref name="minValue" /> equals <paramref name="maxValue" />, <paramref name="minValue" /> is returned.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="minValue" /> is greater than <paramref name="maxValue" />.</exception>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.NextBytes(System.Byte[])">
      <summary>
            Fills the elements of a specified array of bytes with random numbers.
            </summary>
      <param name="buffer">An array of bytes to contain random numbers.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> is null. </exception>
    </member>
    <member name="M:IndianaPark.Tools.StartRandom.NextDouble">
      <summary>
            Returns a random number between 0.0 and 1.0.
            </summary>
      <returns>
            A double-precision floating point number greater than or equal to 0.0, and less than 1.0.
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.TypedObjectPool`1">
      <summary>
            Memorizza di istanze univoche di un oggetto.
            </summary>
      <typeparam name="TObject">Il tipo di oggetti da memorizzare</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.TypedObjectPool`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.TypedObjectPool`1" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.TypedObjectPool`1.Clear">
      <summary>
            Resetta il pool delle istanze
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.TypedObjectPool`1.GetUniqueType(`0)">
      <summary>
            Recupera dal pool l'istanza dell'oggetto indicato.
            </summary>
      <param name="obj">L'oggetto da recuperare dal pool</param>
      <returns>
            L'istanza passata come argomento se questa non è presente nel pool, altrimenti quella presente nel pool.
            Se viene passato il valore <c>null</c> il metodo restituisce il valore di default per l'oggetto
            <typeparamref name="TObject" />.
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Controls.BaseDialogForm">
      <summary>
            Form con le proprietà di base comuni al progetto
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.BaseDialogForm.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.BaseDialogForm" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.BaseDialogForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="T:IndianaPark.Tools.Controls.ControlRepeater">
      <summary>
            Controllo ripetitore. Ripete un pannello comandi in un determinato senso per un numero impostabile di volte.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.#ctor(IndianaPark.Tools.Controls.ControlRepeater.ControlCreator)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /> class.
            </summary>
      <param name="creator">L'oggetto utilizzato per creare i <see cref="T:System.Windows.Forms.Control" /> da aggiungere.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.Add">
      <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <returns>Restituisce un riferimento al nuovo oggetto <see cref="T:System.Windows.Forms.Control" /> appena creato ed aggiunto.</returns>
      <exception cref="T:System.ArgumentNullException">Se <see cref="P:IndianaPark.Tools.Controls.ControlRepeater.Creator" /> non è impostato su un oggetto valido.</exception>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.AutoScroll">
      <summary>
            Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries.
            </summary>
      <returns>true if the container enables auto-scrolling; otherwise, false. The default value is false.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.AutoSize">
      <summary>
            Utilizzare AutoSize per forzare il ridimensionamento in base al contenuto.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.AutoSizeMode">
      <summary>
            Gets or sets how the control will resize itself.
            </summary>
      <returns>
            A value from the <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumeration. The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.Clear">
      <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.Contains(System.Windows.Forms.Control)">
      <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.Controls">
      <summary>
            Gets the collection of controls contained within the control.
            </summary>
      <returns>
            A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.CopyTo(System.Array,System.Int32)">
      <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.
            -or-
            <paramref name="index" /> is equal to or greater than the length of <paramref name="array" />.
            -or-
            The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.
            </exception>
      <exception cref="T:System.ArgumentException">
            The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.
            </exception>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.Count">
      <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </summary>
      <returns>
            The number of elements contained in the <see cref="T:System.Collections.ICollection" />.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.Creator">
      <summary>
            Gets or sets the creator.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.Dispose(System.Boolean)">
      <summary> 
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.FlowDirection">
      <summary>
            Ottiene o imposta un valore che indica la direzione del flusso del controllo.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.IndexOf(System.Windows.Forms.Control)">
      <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
      <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
      <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).
            </summary>
      <returns>true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>
            The element at the specified index.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.Remove(System.Windows.Forms.Control)">
      <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </param>
      <returns>
        <c>true</c> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.RemoveAt(System.Int32)">
      <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
      <param name="index">The zero-based index of the item to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1" />.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1" /> is read-only.</exception>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.SyncRoot">
      <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </summary>
      <returns>
            An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.ControlRepeater.WrapContent">
      <summary>
            Ottiene o imposta un valore che indica se il contenuto del controllo deve essere mandato a capo o troncato.
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.ControlRepeater.ControlCreator">
      <summary>
            Utilizzato per creare un nuovo <see cref="T:System.Windows.Forms.Control" /> da aggiungere al repeater. Il modo in cui la creazione
            avviene è lasciata all'implementazione concreta della classe. Impego del pattern Builder.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.ControlCreator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.ControlRepeater.ControlCreator" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.ControlRepeater.ControlCreator.CreateNewControl">
      <summary>
            Crea un nuovo controllo da aggiungere al <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /></summary>
      <returns>Il nuovo controllo da aggiungere.</returns>
    </member>
    <member name="T:IndianaPark.Tools.Controls.InputForm">
      <summary>
            Finestra di dialogo per l'inserimento generico di dati tramite un input box
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.TextInputForm" /> class.
            </summary>
      <param name="title">Titolo della finestra</param>
      <param name="text">Testo descrittivo per l'utente</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.TextInputForm" /> class.
            </summary>
      <param name="title">Titolo della finestra</param>
      <param name="text">Testo descrittivo per l'utente</param>
      <param name="value">Valore iniziale del TextBox</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.CheckData(System.String)">
      <summary>
            Controlla il formato dei dati dell'input
            </summary>
      <param name="value">Il valore da controllare. E' sempre una stringa perchè deriva da un TextBox</param>
      <returns>
        <c>true</c> se il dato è nel formato corretto e la procedura può proseguire, <c>false</c> altrimenti.</returns>
    </member>
    <member name="E:IndianaPark.Tools.Controls.InputForm.DataChanged">
      <summary>
            Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.GetData">
      <summary>
            Recupera il testo inserito dall'utente
            </summary>
      <returns>Un valore stringa contenente l'input immesso dall'utente</returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.InputForm.IsDataValid">
      <summary>
            Indica se i dati inseriti sono validi
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.InputForm.m_lableTitle">
      <summary>
            L'etichetta che rappresenta il titolo
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.InputForm.m_navigator">
      <summary>
            Il navigator per muoversi avanti ed indietro
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.InputForm.m_result">
      <summary>
            Il risultato dell'input dell'utente
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.InputForm.m_text">
      <summary>
            L'input box
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.InputForm.WrongData">
      <summary>
            Metodo richiamato quando si richiede un'azione di navigazione e i dati non sono validi
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.LineSeparator">
      <summary>
            Linea separatrice.
            <para>Reference: http://social.msdn.microsoft.com/Forums/en-US/winforms/thread/0d4b986e-3ed0-4933-a15d-4b42e02005a7</para></summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LineSeparator.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.LineSeparator" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LineSeparator.Dispose(System.Boolean)">
      <summary> 
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="T:IndianaPark.Tools.Controls.LinkedRepeater`1">
      <summary>
            Oggetto <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /> che permette di associare un oggetto ad ogni elemento creato
            </summary>
      <typeparam name="TLink">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TLink"/&gt; documentation for "T:IndianaPark.Tools.Controls.LinkedRepeater`1"]</p>
      </typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.LinkedRepeater`1" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.#ctor(IndianaPark.Tools.Controls.ControlRepeater.ControlCreator)">
      <summary>
            Initializes a new instance of the <see cref="!:LinkedRepeater"></see> class.
            </summary>
      <param name="creator">L'oggetto utilizzato per creare i <see cref="T:System.Windows.Forms.Control"></see> da aggiungere.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.Add(`0)">
      <summary>
            Aggiunge un controllo alla collezione e lo collega ad un oggetto
            </summary>
      <param name="obj">L'oggetto a cui collegare il controllo</param>
      <returns>Un nuovo controllo o il controllo gia associato con l'oggetto <paramref name="obj" /></returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.Contains(`0)">
      <summary>
            Determines whether [contains] [the specified obj].
            </summary>
      <param name="obj">The obj.</param>
      <returns>
        <c>true</c> if [contains] [the specified obj]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.Dispose(System.Boolean)">
      <summary> 
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.GetLinkEnumerator">
      <summary>
            Restituisce un enumeratore che scorre l'insieme dei link
            </summary>
      <returns>Un enumeratore che scorre l'insieme dei link.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.IndexOf(`0)">
      <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
      <param name="obj">L'oggetto associato al controllo di cui si vuole sapere la posizione</param>
      <returns>
            The index of <paramref name="obj" /> if found in the list; otherwise, -1.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.LinkedRepeater`1.Item(`0)">
      <summary>
            Gets the <see cref="T:System.Windows.Forms.Control" /> at the specified index.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.LinkedRepeater`1.Remove(`0)">
      <summary>
            Rimuove il controllo associato con un oggetto
            </summary>
      <param name="obj">L'oggetto a cui è associato il controllo da rimuovere</param>
      <returns>Il controllo che è appena stato rimosso</returns>
    </member>
    <member name="T:IndianaPark.Tools.Controls.NavigationPanel">
      <summary>
            Pannello di navigazione che mostra i pulsanti Avanti, Indietro, Annulla ed Esci
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NavigationPanel.#ctor">
      <summary>
            Costruttore standard
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.NavigationPanel.CancelEnabled">
      <summary>
            Abilita il pulsante "Esci"
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.NavigationPanel.DialogResult">
      <summary>
            Ottiene o imposta il valore restituito al form padre quando si sceglie il pulsante.
            </summary>
      <returns>
            One of the <see cref="T:System.Windows.Forms.DialogResult" /> values.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NavigationPanel.Dispose(System.Boolean)">
      <summary> 
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NavigationPanel.EnableControl(IndianaPark.Tools.Navigation.NavigationAction,System.Boolean)">
      <summary>
            Utilizzato per abilitare o disabilitare nel controllo le operazioni di navigazione
            </summary>
      <param name="direction">Indica quale direzione di navigazione associata al controllo abilitare o disabilitare</param>
      <param name="status">Se <c>true</c> abilita il relativo controllo, se <c>false</c> lo disabilita</param>
    </member>
    <member name="P:IndianaPark.Tools.Controls.NavigationPanel.FinishEnabled">
      <summary>
            Abilita il pulsante "Fine", disabilita e rende nascosto il pulsante "Avanti"
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.NavigationPanel.NextEnabled">
      <summary>
            Abilita il pulsante "Avanti", disabilita e rende nascosto il pulsante "Fine"
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NavigationPanel.NotifyDefault(System.Boolean)">
      <summary>
            Notifica a un controllo di essere il pulsante predefinito, in modo che l'aspetto e il
            funzionamento del controllo vengano regolati di conseguenza.
            </summary>
      <param name="value">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="value"/&gt; documentation for "M:IndianaPark.Tools.Controls.NavigationPanel.NotifyDefault(System.Boolean)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NavigationPanel.PerformClick">
      <summary>
            Genera un evento Click per il controllo
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.NavigationPanel.PreviousEnabled">
      <summary>
            Abilita il pulsante "Indietro"
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.NumericInputForm">
      <summary>
            Finestra di dialogo per l'inserimento di dati di tipo numerico
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NumericInputForm.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.NumericInputForm" /> class.
            </summary>
      <param name="title">Titolo della finestra</param>
      <param name="text">Testo descrittivo per l'utente</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NumericInputForm.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.NumericInputForm" /> class.
            </summary>
      <param name="title">The title.</param>
      <param name="text">The text.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NumericInputForm.CheckData(System.String)">
      <summary>
            Controlla il formato dei dati dell'input
            </summary>
      <param name="value">Il valore da controllare</param>
      <returns>
        <c>true</c> se il dato è nel formato corretto e la procedura può proseguire, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.NumericInputForm.WrongData">
      <summary>
            Metodo richiamato quando si richiede un'azione di navigazione e i dati non sono validi
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.OldRepeater">
      <summary>
            Controllo ripetitore. Ripete un pannello comandi in un determinato senso per un
            numero impostabile di volte. E' possibile specificare un altro pannello come separatore dei
            pannelli ripetuti. La classe espone poi degli appropriati membri per accedere direttamente ai
            pannelli.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.#ctor">
      <summary>
            Costruttore senza parametri.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.#ctor(System.Windows.Forms.UserControl)">
      <summary>
            Costruttore con solo il tipo da ripetere
            </summary>
      <param name="sampleInstance">Un'istanza dell'oggetto da ripetere</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.#ctor(System.Windows.Forms.UserControl,System.Windows.Forms.UserControl)">
      <summary>
            Costruttore con il tipo da ripetere e il separatore
            </summary>
      <param name="sampleInstance">Un'istanza dell'oggetto da ripetere</param>
      <param name="separator">Il separatore da inserire tra gli oggetti ripetitu</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Add">
      <summary>
            Aggiunge un nuovo pannello alla lista
            </summary>
      <returns>Il controllo appena aggiunto</returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Add(System.UInt32)">
      <summary>
            Aggiunge un nuovo pannello in fondo alla lista
            </summary>
      <param name="count">Quanti pannelli aggiungere</param>
      <returns>
            Un array con la lista dei controlli aggiunti
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Clear">
      <summary>
            Consente di rimuovere tutti gli elementi dal controllo.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.CopyTo(System.Windows.Forms.UserControl[],System.Int32)">
      <summary>
            Copia i pannelli in un oggetto Array, a partire da un particolare indice Array.
            </summary>
      <param name="array">Oggetto unidimensionale Array che rappresenta la destinazione degli elementi copiati. L'indicizzazione di Array deve avere base zero.</param>
      <param name="arrayIndex">Indice in base zero di array a partire dal quale viene effettuata la copia.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.CreateRepeatedControl">
      <summary>
            Crea un'istanza del UserControl da ripetere.
            </summary>
      <returns>Lo UserControl appena creato</returns>
    </member>
    <member name="P:IndianaPark.Tools.Controls.OldRepeater.Direction">
      <summary>
            La dimensione in cui ripetere il controllo: orizzontalmente o verticalmente
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Dispose(System.Boolean)">
      <summary> 
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.DrawControlList">
      <summary>
            Disegna sul controllo la lista dei pannelli da ripetere
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.GetEnumerator">
      <summary>
            Restituisce un enumeratore che scorre un insieme.
            </summary>
      <returns>Oggetto IEnumerator che può essere utilizzato per scorrere l'insieme.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.IndexOf(System.Windows.Forms.UserControl)">
      <summary>
            Determina l'indice di un elemento specifico
            </summary>
      <param name="item">Istanza del pannello da trovare nella lista</param>
      <returns>
            Indice di value se si trova nella lista; in caso contrario, -1.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Insert(System.UInt32)">
      <summary>
            Inserisce un nuovo pannello in corrispondenza dell'indice specificato.
            </summary>
      <param name="index">L'indice in cui inserire il pannello</param>
      <exception cref="T:System.InvalidOperationException">
            Prima di usare Insert è necessario avere impostato il tipo di pannello da ripetere
            </exception>
    </member>
    <member name="P:IndianaPark.Tools.Controls.OldRepeater.Item(System.Int32)">
      <summary>
            Riferimento in sola lettura ad un elemento ripetuto
            </summary>
      <param name="index">L'indice del controllo da riferire</param>
      <returns>L'index-esimo controllo</returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.Remove(System.Int32)">
      <summary>
            Rimuove il pannello in corrispondenza dell'indice specificato.
            </summary>
      <param name="index">Indice del pannello da rimuovere</param>
    </member>
    <member name="P:IndianaPark.Tools.Controls.OldRepeater.RepeatedControlType">
      <summary>
            Il controllo che viene ripetuto.
            </summary>
      <exception cref="T:System.ArgumentNullException">Non si può assegnare valor nullo al campo</exception>
      <exception cref="T:System.ArgumentException">Il separatore deve ereditare da UserControl</exception>
    </member>
    <member name="P:IndianaPark.Tools.Controls.OldRepeater.Repetitions">
      <summary>
            Il numero di controlli attualmente in lista.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.OldRepeater.SeparatorType">
      <summary>
            Il controllo che si trova tra un elemento e il successivo.
            </summary>
      <exception cref="T:System.ArgumentNullException">Non si può assegnare valor nullo al campo</exception>
      <exception cref="T:System.ArgumentException">Il separatore deve ereditare da UserControl</exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.SetRepeatedControl(System.Windows.Forms.UserControl)">
      <summary>
            Imposta il controllo da ripetere. La chiamata di questo metodo resetta il repeater.
            </summary>
      <param name="sampleInstance">Un'istanza del controllo da ripetere</param>
      <exception cref="T:System.ArgumentNullException">E' necessario specificare un'istanza da cui recuperare il tipo</exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.OldRepeater.SetSeparatorControl(System.Windows.Forms.UserControl)">
      <summary>
            Imposta il controllo che viene usato come separatore tra i controlli ripetuti.
            </summary>
      <param name="sampleInstance">Un'istanza del controllo che fa da separatore</param>
      <exception cref="T:System.ArgumentNullException">E' necessario specificare un'istanza da cui recuperare il tipo</exception>
    </member>
    <member name="T:IndianaPark.Tools.Controls.OldRepeater.RepetitionDirection">
      <summary>
            Direzione delle ripetizioni per il controllo ControlRepeater
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.OldRepeater.RepetitionDirection.Vertical">
      <summary>
            Ripetizione in senso verticale
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Controls.OldRepeater.RepetitionDirection.Horizontal">
      <summary>
            Ripetizione in senso orizzontale
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.PrototypeControlCreator">
      <summary>
            Crea un nuovo controllo per un <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.PrototypeControlCreator.#ctor(System.ICloneable)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.PrototypeControlCreator" /> class.
            </summary>
      <param name="prototype">L'istanza dell'oggetto di riferimento come prototipo</param>
      <exception cref="T:System.ArgumentNullException">Il prototipo non può essere <c>null</c>.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="prototype" /> deve derivare da <see cref="T:System.Windows.Forms.Control" /></exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.PrototypeControlCreator.CreateNewControl">
      <summary>
            Crea un nuovo controllo clonando l'oggetto di riferimento
            </summary>
      <returns>Il nuovo controllo.</returns>
    </member>
    <member name="T:IndianaPark.Tools.Controls.TextInputForm">
      <summary>
            Finestra di dialogo per l'inserimento di dati di tipo testuale
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TextInputForm.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.TextInputForm" /> class.
            </summary>
      <param name="title">Titolo della finestra</param>
      <param name="text">Testo descrittivo per l'utente</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TextInputForm.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.TextInputForm" /> class.
            </summary>
      <param name="title">The title.</param>
      <param name="text">The text.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TextInputForm.CheckData(System.String)">
      <summary>
            Controlla il formato dei dati dell'input
            </summary>
      <param name="value">Il valore da controllare</param>
      <returns>
        <c>true</c> se il dato è nel formato corretto e la procedura può proseguire, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TextInputForm.WrongData">
      <summary>
            Metodo richiamato quando si richiede un'azione di navigazione e i dati non sono validi
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Controls.TypeControlCreator">
      <summary>
            Crea un nuovo controllo per un <see cref="T:IndianaPark.Tools.Controls.ControlRepeater" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TypeControlCreator.#ctor(System.Type)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Controls.TypeControlCreator" /> class.
            </summary>
      <param name="controlType">Tipo del controllo da creare</param>
      <exception cref="T:System.ArgumentNullException">Deve essere specificato il tipo di controllo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="controlType" /> deve derivare da <see cref="T:System.Windows.Forms.Control" /></exception>
    </member>
    <member name="M:IndianaPark.Tools.Controls.TypeControlCreator.CreateNewControl">
      <summary>
            Crea un nuovo controllo.
            </summary>
      <returns>Il nuovo controllo.</returns>
    </member>
    <member name="T:IndianaPark.Tools.Controls.UpDownCounter">
      <summary>
            Controllo utente per il conteggio su/giu.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.#ctor">
      <summary>
            Costruttore. Inizializza il conteggio a zero
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.#ctor(System.Int32)">
      <summary>
            Costruttore
            </summary>
      <param name="start">Valore di partenza del contatore.</param>
    </member>
    <member name="E:IndianaPark.Tools.Controls.UpDownCounter.Change">
      <summary>
            Accade quando il conteggio cambia
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.UpDownCounter.Counter">
      <summary>
            Valore corrente del contatore
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.Dispose(System.Boolean)">
      <summary>
            Liberare le risorse in uso.
            </summary>
      <param name="disposing">ha valore true se le risorse gestite devono essere eliminate, false in caso contrario.</param>
    </member>
    <member name="P:IndianaPark.Tools.Controls.UpDownCounter.Max">
      <summary>
            Valore massimo che può assumere il contatore
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.UpDownCounter.Min">
      <summary>
            Valore minimo che può assumere il contatore, anche negativo
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.OnChange">
      <summary>
            Utilizzata per sollevare l'evento Change
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Controls.UpDownCounter.Step">
      <summary>
            Valore assoluto dell'incremento/decremento
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.StepDown">
      <summary>
            Decrementa il valore del contatore
            </summary>
      <returns>Il nuovo valore, che può non essere necessariamente quello aspettato, per rispetto degli estremi</returns>
    </member>
    <member name="M:IndianaPark.Tools.Controls.UpDownCounter.StepUp">
      <summary>
            Incrementa il valore del contatore
            </summary>
      <returns>Il nuovo valore, che può non essere necessariamente quello aspettato, per rispetto degli estremi</returns>
    </member>
    <member name="T:IndianaPark.Tools.Logging.ExceptionFormatter">
      <summary>
            Utilizzata per ottenere infomazioni formattate dalle eccezioni
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.#ctor(System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.ExceptionFormatter" /> class.
            </summary>
      <param name="exception">The exception</param>
      <exception cref="T:System.ArgumentNullException">Se non si specifica una eccezione da gestire</exception>
    </member>
    <member name="P:IndianaPark.Tools.Logging.ExceptionFormatter.Exception">
      <summary>
            Eccezione gestita dalla specifica istanza di <see cref="T:IndianaPark.Tools.Logging.ExceptionFormatter" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.GetFormatter(System.Exception,System.Boolean)">
      <summary>
            Restituisce l'ExceptionFormatter specifico per il tipo di eccezione passata
            </summary>
      <param name="exception">L'eccezione in cui cercare le eccezioni annidate</param>
      <param name="getLast">Se <c>true</c> indica di recuperare l'ultima eccezione</param>
      <returns>
            Un'oggetto <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> inizializzato per gestire l'ultima eccezione annidata
            all'interno dell'eccezione specificata
            </returns>
      <exception cref="T:System.ArgumentNullException">Se non si specifica una eccezione da gestire</exception>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.GetLast">
      <summary>
            Crea un ExceptionFormatter per l'ultima Exception innestata che trova.
            </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Logging.ExceptionFormatter.GetLast"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.GetMessage">
      <summary>
            Il messaggio contenuto nell'eccezione
            </summary>
      <returns>
            Una stringa contente il messaggio contenuto nell'eccezione
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.GetSource">
      <summary>
            Il nome del file che ha causato l'eccezione
            </summary>
      <returns>
            Una stringa contente il nome del file che ha causato l'eccezione
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.GetStackTrace">
      <summary>
            La Stack Trace formattata
            </summary>
      <returns>
            Una stringa contente la Stack Trace formattata
            </returns>
    </member>
    <member name="F:IndianaPark.Tools.Logging.ExceptionFormatter.m_exception">
      <summary>
            L'eccezione gestita dall'istanza di <see cref="T:IndianaPark.Tools.Logging.ExceptionFormatter" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ExceptionFormatter.ToString">
      <summary>
            Una stringa con l'output formattato
            </summary>
      <returns>
            Una stringa con l'output formattato con uno stile di default secondo la tipologia di eccezione
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Logging.IExceptionFormatter">
      <summary>
            Interfaccia utilizzata per ottenere infomazioni formattate sulle eccezioni
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.IExceptionFormatter.Exception">
      <summary>
            L'eccezione gestita dall'ExceptionFormatter
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.IExceptionFormatter.GetLast">
      <summary>
            Crea un ExceptionFormatter per l'ultima Exception innestata che trova.
            </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Logging.IExceptionFormatter.GetLast"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.IExceptionFormatter.GetMessage">
      <summary>
            Il messaggio contenuto nell'eccezione
            </summary>
      <returns>Una stringa contente il messaggio contenuto nell'eccezione</returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.IExceptionFormatter.GetSource">
      <summary>
            Il nome del file che ha causato l'eccezione
            </summary>
      <returns>Una stringa contente il nome del file che ha causato l'eccezione</returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.IExceptionFormatter.GetStackTrace">
      <summary>
            La Stack Trace formattata
            </summary>
      <returns>Una stringa contente la Stack Trace formattata</returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.IExceptionFormatter.ToString">
      <summary>
            Una stringa con l'output formattato
            </summary>
      <returns>
            Una stringa con l'output formattato con uno stile di default secondo la tipologia di eccezione
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Logging.ILoggerWriter">
      <summary>
            Un writer per messaggi di log
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ILoggerWriter.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ILoggerWriter.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.ILoggerWriter.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Logging.ILogMessage">
      <summary>
            Rappresenta un testo da visualizzare nel log
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.ILogMessage.Description">
      <summary>
            Il contenuto del messaggio
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.ILogMessage.Title">
      <summary>
            Titolo assegnato al messaggio
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.ILogMessage.VerbosityLevel">
      <summary>
            Livello di verbosità assegnato al messaggio
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Logger">
      <summary>
            Scrive messaggi di log da varie sorgenti
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.#ctor(IndianaPark.Tools.Logging.ILoggerWriter)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Logger" /> class.
            </summary>
      <param name="strategy">La strategia implementativa per scrivere sull'output</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Passando un oggetto <see cref="T:IndianaPark.Tools.Logging.Logger" /> si crea un riferimento circolare.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Clone(IndianaPark.Tools.Logging.ILoggerWriter)">
      <summary>
            Clona l'istanza di <see cref="T:IndianaPark.Tools.Logging.Logger" /> utilizzando un nuovo <see cref="T:IndianaPark.Tools.Logging.ILoggerWriter" /></summary>
      <param name="nuovo">Il nuovo <see cref="T:IndianaPark.Tools.Logging.ILoggerWriter" /> da usare nel clone</param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Logging.Logger.Clone(IndianaPark.Tools.Logging.ILoggerWriter)"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Default">
      <summary>
            Recupera l'istanza di default preconfigurata
            </summary>
      <returns>L'istanza d idefault di <see cref="T:IndianaPark.Tools.Logging.Logger" /></returns>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Logger.m_strategy">
      <summary>
        <see cref="T:IndianaPark.Tools.Logging.ILoggerWriter" /> da utilizzare per scrivere sull'output
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Logger.VerbosityMask">
      <summary>
            Livello di verbosità scelto per il debug
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="description">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
      <param name="message">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="message"/&gt; documentation for "M:IndianaPark.Tools.Logging.Logger.Write(IndianaPark.Tools.Logging.ILogMessage)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="description">La descrizione relativa all'operazione di output</param>
      <param name="exception">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
      <param name="message">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="message"/&gt; documentation for "M:IndianaPark.Tools.Logging.Logger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)"]</p>
      </param>
      <param name="formatter">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="formatter"/&gt; documentation for "M:IndianaPark.Tools.Logging.Logger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write``1(System.Collections.Generic.IEnumerable{``0},System.String,IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="list">La lista da visualizzare</param>
      <param name="description">La descrizione della lista</param>
      <param name="level">
            Opzionale. Livello di verbosità associato al messaggio. Di default vale <c><see cref="!:VerbosityMask.Data" /> | <see cref="!:VerbosityMask.InformationDebug" /></c></param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write(System.Exception,System.String,IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="description">Opzionale. La descrizione relativa al messaggio del log. Di default è una stringa vuota</param>
      <param name="exception">L'oggetto <see cref="T:System.Exception" /> di cui visualizzare le informazioni</param>
      <param name="level">Opzionale. Livello di verbosità associato al messaggio. Di default vale <see cref="!:VerbosityMask.ErrorDebug" /></param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Logger.Write(System.String,IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="description">Il testo da visualizzare</param>
      <param name="level">Opzionale. Livello di verbosità associato al messaggio. Di default vale <see cref="!:VerbosityMask.InformationDebug" /></param>
    </member>
    <member name="T:IndianaPark.Tools.Logging.LogMessage">
      <summary>
            Un messaggio per la scrittura su log
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.LogMessage.#ctor(System.String,IndianaPark.Tools.Logging.Verbosity)">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.LogMessage" /> class</summary>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:IndianaPark.Tools.Logging.LogMessage.#ctor(System.String,IndianaPark.Tools.Logging.Verbosity)"]</p>
      </param>
      <param name="level">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="level"/&gt; documentation for "M:IndianaPark.Tools.Logging.LogMessage.#ctor(System.String,IndianaPark.Tools.Logging.Verbosity)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.LogMessage.#ctor(System.String,System.String,IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.LogMessage" /> class.
            </summary>
      <param name="title">Titolo del messaggio</param>
      <param name="text">Testo del messaggio</param>
      <param name="level">Livello di verbosità assegnato al messaggio</param>
      <exception cref="T:System.ArgumentNullException">Se viene specificato un <paramref name="text" /><c>null</c></exception>
    </member>
    <member name="P:IndianaPark.Tools.Logging.LogMessage.Description">
      <summary>
            Il contenuto del messaggio
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.LogMessage.Title">
      <summary>
            Titolo assegnato al messaggio
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.LogMessage.VerbosityLevel">
      <summary>
            Livello di verbosità assegnato al messaggio
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Verbosity">
      <summary>
            Enumerazione per la visualizzazione dei messaggi di backup
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.None">
      <summary>
            Nessuna visualizzazione
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Information">
      <summary>
            Messaggi più generici
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Warning">
      <summary>
            Dettagli dei messaggi più generici
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Error">
      <summary>
            Errore o eccezione
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Data">
      <summary>
            Serie di dati, quindi anche prolisso
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.User">
      <summary>
            Indica che è una informazione da fornire obbligatoriamente all'utente
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Debug">
      <summary>
            Indica che è una informazione da fornire obbligatoriamente al debug
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.InformationDebug">
      <summary>
            Messaggi più generici da scrivere sempre su debug
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.WarningDebug">
      <summary>
            Dettagli dei messaggi più generici da scrivere sempre su debug
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.ErrorDebug">
      <summary>
             Errore o eccezione da scrivere sempre su debug
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.UserRelevants">
      <summary>
            Informazioni rilevanti per l'utente
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.Relevants">
      <summary>
            Informazioni rilevanti
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Logging.Verbosity.All">
      <summary>
            Tutti i livelli
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter">
      <summary>
            Classe utilizzata per ottenere infomazioni formattate sulle eccezioni di tipo <see cref="T:System.ComponentModel.LicenseException" /></summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter.Exception">
      <summary>
            L'eccezione gestita dall'ExceptionFormatter
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter.GetMessage">
      <summary>
            Il messaggio contenuto nell'eccezione
            </summary>
      <returns>
            Una stringa contente il messaggio contenuto nell'eccezione
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter.GetSource">
      <summary>
            Il nome del file che ha causato l'eccezione
            </summary>
      <returns>
            Una stringa contente il nome del file che ha causato l'eccezione
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter.GetStackTrace">
      <summary>
            La Stack Trace formattata
            </summary>
      <returns>
            Una stringa contente la Stack Trace formattata
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Formatters.LicenseExceptionFormatter.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Formatters.ReflectionTypeLoadExceptionFormatter">
      <summary>
            Classe utilizzata per ottenere infomazioni formattate sulle eccezioni di tipo <see cref="T:IndianaPark.Tools.Logging.Formatters.ReflectionTypeLoadExceptionFormatter" /></summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Formatters.ReflectionTypeLoadExceptionFormatter.Exception">
      <summary>
            L'eccezione gestita dall'ExceptionFormatter
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Formatters.ReflectionTypeLoadExceptionFormatter.ToString">
      <summary>
            Una stringa con l'output formattato
            </summary>
      <returns>
            Una stringa con l'output formattato con uno stile di default secondo la tipologia di eccezione
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Writers.ChainLogger">
      <summary>
            Scrive il log su più output, sequenzialmente
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ChainLogger.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.ChainLogger" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ChainLogger.#ctor(System.Collections.Generic.IList{IndianaPark.Tools.Logging.ILoggerWriter})">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.ChainLogger" /> class.
            </summary>
      <param name="loggers">La lista di <see cref="T:IndianaPark.Tools.Logging.ILoggerWriter" /> da gestire</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
            Se viene incluso l'istanza corrente nella lista dei loggers. In questo caso si verificherebbe un riferimento
            circolare.
            </exception>
      <exception cref="T:System.ArgumentNullException">Se viene passato una lista di loggers impostata a <c>null</c></exception>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Writers.ChainLogger.Loggers">
      <summary>
            Lista di <see cref="T:IndianaPark.Tools.Logging.ILoggerWriter" /> utilizzati per scrivere in output i messaggi di log.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ChainLogger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ChainLogger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ChainLogger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Writers.CompositeLogger">
      <summary>
            Scrive i messaggi di log su diversi output
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.#ctor(IndianaPark.Tools.Logging.ILoggerWriter,IndianaPark.Tools.Logging.ILoggerWriter)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.CompositeLogger" /> class.
            </summary>
      <param name="tracing">Oggetto utilizzato per la scrittura di debug</param>
      <param name="user">Oggetto utilizzato per avvisare l'utente</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.IsTracingRelevant(IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Determina se la verbosità è rilevante per il debugging
            </summary>
      <param name="level">Il livello di verbosità da controllare</param>
      <returns>
        <c>true</c> se è un messaggio destinato al debug, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.IsUserRelevant(IndianaPark.Tools.Logging.Verbosity)">
      <summary>
            Determina se la verbosità è rilevante per l'utente
            </summary>
      <param name="level">Il livello di verbosità da controllare</param>
      <returns>
        <c>true</c> se è un messaggio destinato all'utente, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Writers.CompositeLogger.TracingLogger">
      <summary>
            Oggetto per la scrittura di debug
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Writers.CompositeLogger.TracingMask">
      <summary>
            Maschera per la verifica dei flag per i messaggi da scrivere per il debug
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Writers.CompositeLogger.UserLogger">
      <summary>
            Oggetto per avvisare l'utente
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Logging.Writers.CompositeLogger.UserMask">
      <summary>
            Maschera per la verifica dei flag per i messaggi da visualizzare all'utente
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.CompositeLogger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Writers.ConsoleLogger">
      <summary>
            Scrive i messaggi di log su <see cref="!:System.Diagnostics.Console" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ConsoleLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.ConsoleLogger" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ConsoleLogger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ConsoleLogger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.ConsoleLogger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Writers.DebugLogger">
      <summary>
            Scrive i messaggi di log su <see cref="!:System.Diagnostics.Logging" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.DebugLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.DebugLogger" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.DebugLogger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.DebugLogger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.DebugLogger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Logging.Writers.MBoxLogger">
      <summary>
            Visualizza i messaggi di log tramite <see cref="T:System.Windows.Forms.MessageBox" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.MBoxLogger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Logging.Writers.MBoxLogger" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.MBoxLogger.Write(IndianaPark.Tools.Logging.ILogMessage)">
      <summary>
            Scrive un testo sull'output
            </summary>
      <param name="message">Un oggetto <see cref="T:IndianaPark.Tools.Logging.ILogMessage" /> contenente i dati da scrivere</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.MBoxLogger.Write(IndianaPark.Tools.Logging.ILogMessage,IndianaPark.Tools.Logging.IExceptionFormatter)">
      <summary>
            Scrive le informazioni di una eccezione sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="formatter">Il <see cref="T:IndianaPark.Tools.Logging.IExceptionFormatter" /> relativo all'eccezione da visualizzare</param>
    </member>
    <member name="M:IndianaPark.Tools.Logging.Writers.MBoxLogger.Write``1(IndianaPark.Tools.Logging.ILogMessage,System.Collections.Generic.IEnumerable{``0})">
      <summary>
            Scrive il contenuto di una lista sull'output
            </summary>
      <param name="message">La descrizione relativa all'operazione di output</param>
      <param name="list">La lista da visualizzare</param>
      <typeparam name="T">Il tipo di dati contenuto nella lista</typeparam>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.INavigator">
      <summary>
            Rappresenta un oggetto che può navigare.
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.INavigator.Navigate">
      <summary>
            Generato quando viene richiesta un'azione di navigazione
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.INavigator.NavigationStatus">
      <summary>
            Lo stato  corrente dell'oggetto navigatore
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.INavigator.Sail(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Utilizzato per richiedere al navigatore un'azione di navigazione. Per informazioni su cosa e quali sono le azioni
            di navigazione vedere <see cref="T:IndianaPark.Tools.Navigation.NavigationAction" /></summary>
      <param name="action">Tipo di azione richiesta</param>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.NavigationAction">
      <summary>
            Le possibili operazione di navigazione
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Navigation.NavigationAction.Cancel">
      <summary>
            Azione di annullamento della navigazione
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Navigation.NavigationAction.Next">
      <summary>
            Azione di movimento al passo successivo
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Navigation.NavigationAction.Back">
      <summary>
            Azione di movimento al passo precedente
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Navigation.NavigationAction.Finish">
      <summary>
            Azione di termine per fine della navigazione
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Navigation.NavigationAction.Nothing">
      <summary>
            Nessuna azione richiesta
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.NavigationControl">
      <summary>
            Un generico controllo di navigazione.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Navigation.NavigationControl" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationControl.EnableControl(IndianaPark.Tools.Navigation.NavigationAction,System.Boolean)">
      <summary>
            Utilizzato per abilitare o disabilitare nel controllo le operazioni di navigazione
            </summary>
      <param name="direction">Indica quale direzione di navigazione associata al controllo abilitare o disabilitare</param>
      <param name="status">Se <c>true</c> abilita il relativo controllo, se <c>false</c> lo disabilita</param>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationControl.Navigate">
      <summary>
            Generato quando viene richiesta un'azione di navigazione
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.NavigationControl.NavigationStatus">
      <summary>
            Lo stato dell'oggetto navigatore
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationControl.Sail(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Utilizzato per richiedere al navigatore un'azione di navigazione. 
            </summary>
      <param name="action">Tipo di azione richiesta</param>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.NavigationEvent">
      <summary>
            Delegato per i gestori degli eventi di navigazione
            </summary>
      <param name="source">Oggetto da cui parte l'evento</param>
      <param name="exception">Informazioni sull'azione di navigazione richiesta</param>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.NavigationEventArgs">
      <summary>
            Viene utilizzata per dialogare con i gestori degli eventi di navigazione
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationEventArgs.#ctor">
      <summary>
            Costruttore standard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationEventArgs.#ctor(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Costruttore standard
            </summary>
      <param name="ns">Lo stato di navigazione dal quale parte il Navigatore</param>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.NavigationEventArgs.Cancel">
      <summary>
            Questa proprietà permette di annullare l'operazione di navigazione che è stata richiesta.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.NavigationEventArgs.Status">
      <summary>
            Lo stato di navigazione in cui ci si trova o che è stato richiesto all'evento
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Navigation.NavigationForm">
      <summary>
            Generica form abilitata alla navigazione.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.#ctor">
      <summary>
            Costruttore standard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.BackDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Esegue le azioni di default quando l'istanza successiva alla corrente richiede di tornare al passo precedente
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.BackDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.CancelDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Esegue le azioni di default quando la form corrente richiede di annullare l'operazione
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.CancelDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.FinishDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Esegue le azioni di default quando la form corrente richiede di terminare correttamente l'operazione
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.FinishDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.NavigationForm.IsUserAction">
      <summary>
            Indica se l'utente ha effettuato un'operazione manualmente
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationForm.Navigate">
      <summary>
            Generato quando viene richiesta un'azione di navigazione
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationForm.NavigateBack">
      <summary>
            Generato quando viene richiesto di navigare indietro
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationForm.NavigateCancel">
      <summary>
            Generato quando viene richiesto di annullare la navigazione
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationForm.NavigateFinish">
      <summary>
            Generato quando viene richiesto di terminare la navigazione
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Navigation.NavigationForm.NavigateNext">
      <summary>
            Generato quando viene richiesto di navigare in avanti
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Navigation.NavigationForm.NavigationStatus">
      <summary>
            Lo stato dell'oggetto navigatore
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.NextCancelDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Gestisce l'evento di chiusura dell'istanza NavigationForm richiamata dopo l'istanza corrente. Viene
            utilizzata per far si che il passo i-esimo chieda al (i - 1)-esimo a sua volta di chiudersi.
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.NextCancelDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.NextDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Esegue le azioni di default quando l'istanza corrente richiede di passare al passo successivo
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.NextDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.NextFinishDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Gestisce l'evento di chiusura dell'istanza NavigationForm richiamata dopo l'istanza corrente. Viene
            utilizzata per far si che il passo i-esimo chieda al (i - 1)-esimo a sua volta di chiudersi.
            </summary>
      <param name="sender">The sender.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Navigation.NavigationForm.NextFinishDefaultHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.OnNavigate(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Genera uno qualsiasi degli eventi di navigazione interni
            </summary>
      <param name="action">Il tipo di evento da eseguire</param>
      <returns>Indica se annullare l'azione (<c>true</c> annulla)</returns>
    </member>
    <member name="M:IndianaPark.Tools.Navigation.NavigationForm.Sail(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Utilizzato per richiedere al navigatore un'azione di navigazione. Per informazioni su cosa e quali sono le azioni
            di navigazione vedere <see cref="T:IndianaPark.Tools.Navigation.NavigationAction" /></summary>
      <param name="action">Tipo di azione richiesta</param>
    </member>
    <member name="T:IndianaPark.Tools.Security.Certificates">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:IndianaPark.Tools.Security.Certificates"]</p>
      </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Certificates" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.InstallCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Installa un certificato nello storage.
            </summary>
      <param name="storeName">Il nome dello storage predefinito</param>
      <param name="storeLocation">La locazione dello storage</param>
      <param name="cert">Il certificato da installare</param>
      <returns>
        <c>true</c> se il certificato è stato installato con successo, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.InstallCertificate(System.Security.Cryptography.X509Certificates.X509Store,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Installa un certificato nello storage
            </summary>
      <param name="store">Lo storage in cui installare il certificato</param>
      <param name="cert">Il certificato da installare</param>
      <returns>
        <c>true</c> se il certificato è stato installato con successo, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.InstallCertificate(System.String,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Installa un certificato nello storage della macchina locale.
            </summary>
      <param name="storeName">Il nome dello storage riferito alla macchina locale</param>
      <param name="cert">Il certificato da installare</param>
      <returns>
        <c>true</c> se il certificato è stato installato con successo, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.ObtainCertificate(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
      <summary>
            Recupera un certificato dallo storage locale
            </summary>
      <param name="storeName">Il nome dello storage predefinito</param>
      <param name="storeLocation">La locazione dello storage</param>
      <param name="certName">Il nome del certificato</param>
      <returns>Un'istanza del certificato cercato, oppure <c>null</c> se il certificato non viene trovato</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.ObtainCertificate(System.Security.Cryptography.X509Certificates.X509Store,System.String)">
      <summary>
            Recupera un certificato dallo storage locale
            </summary>
      <param name="store">Lo storage in cui cercare il certificato</param>
      <param name="certName">Il nome del certificato</param>
      <returns>Un'istanza del certificato cercato, oppure <c>null</c> se il certificato non viene trovato</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Certificates.ObtainCertificate(System.String,System.String)">
      <summary>
            Recupera un certificato dallo storage locale
            </summary>
      <param name="storeName">Il nome dello storage riferito alla macchina locale</param>
      <param name="certName">Il nome del certificato</param>
      <returns>Un'istanza del certificato cercato, oppure <c>null</c> se il certificato non viene trovato</returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.Extensions">
      <summary>
            Extension Methods for Security
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Extensions.ApplySignature(System.Xml.XmlDocument,System.Security.Cryptography.AsymmetricAlgorithm)">
      <summary>
            Sign an XmlDocument with an asymmetric algorithm.
            </summary>
      <param name="doc">Il documento da firmare</param>
      <param name="key">L'algoritmo di crittografia</param>
      <returns>
        <c>true</c> se la firma è stata applicata con successo, <c>false</c> altrimenti
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Extensions.Decrypt(System.Xml.XmlDocument,System.Security.Cryptography.RSA)">
      <summary>
            Decrypts the specified XmlDocument
            </summary>
      <param name="doc">Il documento XmlDocument da decrittografare.</param>
      <param name="alg">L'algoritmo RSA da utilizzare per decrittografare il documento.</param>
      <returns>
        <c>true</c> se la decrittografia del documento è andata a buon fine, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Extensions.Encrypt(System.Xml.XmlDocument,System.Security.Cryptography.RSA)">
      <summary>
            Encrypts an XmlDocument with the specified RSA algorithm
            </summary>
      <param name="doc">Il documento XmlDocument da crittografare</param>
      <param name="alg">L'algoritmo RSA da utilizzare per crittografare il documento.</param>
      <returns>
        <c>true</c> se la crittografia del documento è andata a buon fine, <c>false</c> altrimenti.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Extensions.PossesPrivateKey(System.Security.Cryptography.RSA)">
      <summary>
            Controlla se l'algoritmo RSA possiede una chiave privata
            </summary>
      <param name="alg">The alg.</param>
      <returns>
        <c>true</c> se l'algoritmo dispone anche di una chiave privata, <c>false</c> se dispone
                solo di una chiave pubblica.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Extensions.VerifySignature(System.Xml.XmlDocument,System.Security.Cryptography.AsymmetricAlgorithm,System.Boolean)">
      <summary>
            Verify the signature of an XmlDocument against an asymmetric algorithm and return the result.
            </summary>
      <param name="doc">Il documento da verificare.</param>
      <param name="key">L'algoritmo di crittografia</param>
      <param name="remove">Indica se rimuovere la signature dal documento</param>
      <returns>
        <c>true</c> if the XML is correctly signed, <c>false</c> otherwise
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.Fingerprint">
      <summary>
            Utilizzata per ottenere un identificativo univoco del computer su cui il programma è in esecuzione
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Fingerprint" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetBaseId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetBaseId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetBaseId"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetBiosId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetBiosId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetBiosId"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetCpuId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetCpuId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetCpuId"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetDiskId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetDiskId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetDiskId"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetFingerprint">
      <summary>
            Restituisce un identificativo univoco del computer
            </summary>
      <returns>Una stringa contenente l'identificativo univoco del computer</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetFingerprint(IndianaPark.Tools.Security.Fingerprint.FingerprintElements)">
      <summary>
            Restituisce un identificativo univoco del computer
            </summary>
      <param name="which">Quali elementi informativi includere nel fingerprint</param>
      <returns>Una stringa contenente l'identificativo univoco del computer</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)"]</p>
      </summary>
      <param name="wmiClass">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wmiClass"/&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)"]</p>
      </param>
      <param name="wmiProperty">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wmiProperty"/&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)"]</p>
      </param>
      <param name="wmiMustBeTrue">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wmiMustBeTrue"/&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetIdentifier(System.String,System.String,System.String)"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetMacId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetMacId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetMacId"]</p>
      </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.Fingerprint.GetVideoId">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetVideoId"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.Fingerprint.GetVideoId"]</p>
      </returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.Fingerprint.FingerprintElements">
      <summary>
            Enumerazione dei possibili elementi informativi da includere nel fingerprint
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.CPU">
      <summary>
            Identificativo della CPU
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.Motherboard">
      <summary>
            Identificativo della scheda madre
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.BIOS">
      <summary>
            Identificativo del BIOS
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.Disk">
      <summary>
            Identificativo dei dischi rigidi
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.Video">
      <summary>
            Identificativo della scheda video
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Fingerprint.FingerprintElements.Network">
      <summary>
            Identificativo della scheda di rete
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.ISecureContainer`1">
      <summary>
            Interfaccia che rappresenta un contenitore sicuro per lo scambio di dati
            </summary>
      <typeparam name="TData">Il tipo di dati che il contenitore sicuro deve gestire.</typeparam>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.Data">
      <summary>
            I dati grezzi contenuti nell'istanza.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecureContainer`1.FreeSecuredData">
      <summary>
            Libera i dati sicuri contenuti nel XmlDocument
            </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Security.ISecureContainer`1.FreeSecuredData"]</p>
      </returns>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.IsSecure">
      <summary>
            Un valore che indica se i dati sono stati firmati e crittografati, oppure se sono ancora grezzi.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.IsVerified">
      <summary>
            Indica se i dati sono stati verificati con successo. 
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.LocalKey">
      <summary>
            Il provider crittografico locale.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecureContainer`1.MakeDataSecure">
      <summary>
            Rende i dati grezzi sicuri.
            </summary>
      <returns>
        <c>true</c> se i dati sono stati resi sicuri con successo, <c>false</c> altrimenti
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.RemoteKey">
      <summary>
            Il provider crittografico remoto. 
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.SecuredData">
      <summary>
            I dati in formato sicuro
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.UseEncryption">
      <summary>
            Indica se i dati utilizzano la crittogravia
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.ISecureContainer`1.UseSignature">
      <summary>
            Indica se i dati utilizzano la firma
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.ISecurityProvider">
      <summary>
            Interfaccia che rappresenta l'oggetto che fornisce le chiavi di sicurezza ai <see cref="T:IndianaPark.Tools.Security.ISecureContainer`1" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecurityProvider.GetDecryptionKey">
      <summary>
            Recupera la chiave utilizzata per decrittografare
            </summary>
      <returns>Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per decrittografare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecurityProvider.GetEncryptionKey">
      <summary>
            Recupera la chiave utilizzata per crittografare
            </summary>
      <returns>Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per crittografare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecurityProvider.GetSigningKey">
      <summary>
            Recupera la chiave con cui si firmano i dati.
            </summary>
      <returns>La chiave utilizzata per firmare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.ISecurityProvider.GetVerifyingKey">
      <summary>
            Recupera la chiave con cui si verificano le firme dei dati
            </summary>
      <returns>La chiave utilizzata per verificare le firme dei dati</returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.RSASecurityProvider">
      <summary>
            Provider di chiavi per gli algoritmi di crittografia che utilizza <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.RSASecurityProvider.#ctor(System.Security.Cryptography.RSACryptoServiceProvider,System.Security.Cryptography.RSACryptoServiceProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.RSASecurityProvider" /> class.
            </summary>
      <param name="localCsp">Chiave RSA locale. Deve essere presente anche la chiave privata.</param>
      <param name="remoteCsp">Chiave RSA remota.</param>
    </member>
    <member name="M:IndianaPark.Tools.Security.RSASecurityProvider.GetDecryptionKey">
      <summary>
            Recupera la chiave utilizzata per decrittografare
            </summary>
      <returns>Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per decrittografare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.RSASecurityProvider.GetEncryptionKey">
      <summary>
            Recupera la chiave utilizzata per crittografare
            </summary>
      <returns>Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per crittografare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.RSASecurityProvider.GetSigningKey">
      <summary>
            Recupera la chiave con cui si firmano i dati.
            </summary>
      <returns>La chiave utilizzata per firmare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.RSASecurityProvider.GetVerifyingKey">
      <summary>
            Recupera la chiave con cui si verificano le firme dei dati
            </summary>
      <returns>La chiave utilizzata per verificare le firme dei dati</returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.SecureContainer`1">
      <summary>
            Contenitore sicuro per lo scambio di dati
            </summary>
      <typeparam name="TData">Il tipo di dati che il contenitore sicuro deve gestire.</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Security.SecureContainer`1.#ctor(System.Xml.XmlDocument,IndianaPark.Tools.Security.ISecurityProvider,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.SecureContainer`1" /> class.
            </summary>
      <param name="document">I dati sicuri contenuti in un oggetto XmlDocument.</param>
      <param name="provider">Il provider delle chiavi</param>
      <param name="useEncryption">Indica se utilizzare la crittografia</param>
      <param name="useSignature">Indica se utilizzare la firma dei dati</param>
    </member>
    <member name="M:IndianaPark.Tools.Security.SecureContainer`1.#ctor(`0,IndianaPark.Tools.Security.ISecurityProvider,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.SecureContainer`1" /> class.
            </summary>
      <param name="data">I dati grezzi non ancora resi sicuri.</param>
      <param name="provider">Il provider delle chiavi</param>
      <param name="useEncryption">Indica se utilizzare la crittografia</param>
      <param name="useSignature">Indica se utilizzare la firma dei dati</param>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.Data">
      <summary>
            I dati grezzi contenuti nell'istanza.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.SecureContainer`1.FreeSecuredData">
      <summary>
            Libera i dati sicuri contenuti nel XmlDocument
            </summary>
      <returns>
        <c>true</c> se i dati sono stati decrittografati e deserializzati con successo, <c>false altrimenti</c></returns>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.IsSecure">
      <summary>
            Un valore che indica se i dati sono stati firmati e crittografati, oppure se sono ancora grezzi.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.IsVerified">
      <summary>
            Indica se i dati sono stati verificati con successo. 
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.LocalKey">
      <summary>
            Il provider crittografico locale. Firma i dati grezzi e decrittografa quelli sicuri.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.SecureContainer`1.MakeDataSecure">
      <summary>
            Rende i dati grezzi sicuri.
            </summary>
      <returns>
        <c>true</c> se i dati sono stati resi sicuri con successo, <c>false altrimenti</c></returns>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.RemoteKey">
      <summary>
            Il provider crittografico remoto. Controlla la firma dei dati sicuri, exception crittografa quelli grezzi
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.SecuredData">
      <summary>
            I dati in formato sicuro, sotto forma di un oggetto XmlDocument
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.UseEncryption">
      <summary>
            Indica se i dati utilizzando la crittogravia del provider remoto
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.SecureContainer`1.UseSignature">
      <summary>
            Indica se i dati utilizzano la firma del provider locale
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.X509SecurityProvider">
      <summary>
            Provider per gli algoritmi di crittografia che utilizza i certificati X509
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.X509SecurityProvider.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.X509SecurityProvider" /> class.
            </summary>
      <param name="localCert">Certificato X509 locale. Deve essere presente anche la chiave privata.</param>
      <param name="remoteCert">Certificato X509 remoto.</param>
    </member>
    <member name="M:IndianaPark.Tools.Security.X509SecurityProvider.GetDecryptionKey">
      <summary>
            Recupera la chiave utilizzata per decrittografare
            </summary>
      <returns>
            Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per decrittografare i dati
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.X509SecurityProvider.GetEncryptionKey">
      <summary>
            Recupera la chiave utilizzata per crittografare
            </summary>
      <returns>
            Un oggetto di tipo <see cref="T:System.Security.Cryptography.RSA" /> utilizzato per crittografare i dati
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.X509SecurityProvider.GetSigningKey">
      <summary>
            Recupera la chiave con cui si firmano i dati.
            </summary>
      <returns>La chiave utilizzata per firmare i dati</returns>
    </member>
    <member name="M:IndianaPark.Tools.Security.X509SecurityProvider.GetVerifyingKey">
      <summary>
            Recupera la chiave con cui si verificano le firme dei dati
            </summary>
      <returns>
            La chiave utilizzata per verificare le firme dei dati
            </returns>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.EnabledFeaturesAttribute">
      <summary>
            Funzionalità abilitate in una classe
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.EnabledFeaturesAttribute.#ctor(IndianaPark.Tools.Security.Licensing.SoftwareFeatures)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Licensing.EnabledFeaturesAttribute" /> class.
            </summary>
      <param name="features">The features.</param>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.EnabledFeaturesAttribute.Features">
      <summary>
            Recupera le funzionalità abilitate per la classe
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.License">
      <summary>
            Licenza che viene concessa ai Client
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.License.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Licensing.License" /> class</summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.CheckAssemblyChecksum">
      <summary>
            Indica se controllare i checksum degli assembly
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.CheckDuration">
      <summary>
            Indica se controllare o meno il tempo di validità della licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.CheckFeatures">
      <summary>
            Indica se eseguire o meno il controllo delle features abilitate
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.CheckFingerprint">
      <summary>
            Indica se eseguire o meno il controllo del fingerprint
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.ChecksumTable">
      <summary>
            Tabella contenente i checksum dei file di programma abilitati dalla licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.Client">
      <summary>
            Nome del client
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.Duration">
      <summary>
            Durata di validità della licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.EmissionDate">
      <summary>
            Data di emissione della licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.EnabledFeatures">
      <summary>
            Features rese disponibili al Client
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.Fingerprint">
      <summary>
            Fingerprint a cui è concessa la licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.XmlChecksumTable">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:IndianaPark.Tools.Security.Licensing.License.XmlChecksumTable"]</p>
      </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.License.XmlDuration">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:IndianaPark.Tools.Security.Licensing.License.XmlDuration"]</p>
      </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo"]</p>
      </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo" /> class</summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.Checksum">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.Checksum"]</p>
      </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.FileName">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.FileName"]</p>
      </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.FullAssemblyName">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "F:IndianaPark.Tools.Security.Licensing.License.AssemblyInfo.FullAssemblyName"]</p>
      </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.LicenseRequest">
      <summary>
            Richiesta di licenza
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.LicenseRequest.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Licensing.LicenseRequest" /> class</summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.LicenseRequest.Fingerprint">
      <summary>
            Fingerprint per cui si richiede la licenza
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.LicenseRequest.Name">
      <summary>
            Nome del Client
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.LicenseRequest.RequestedFeatures">
      <summary>
            Features richiede per il programma
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.RunningLicense">
      <summary>
            Generica licenza rilasciata ad un componente IndianaPark
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.RunningLicense.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Security.Licensing.RunningLicense" /> class.
            </summary>
      <param name="code">The code.</param>
    </member>
    <member name="M:IndianaPark.Tools.Security.Licensing.RunningLicense.Dispose">
      <summary>Releases all resources used by the <see cref="T:IndianaPark.Tools.Security.Licensing.RunningLicense" /></summary>
    </member>
    <member name="P:IndianaPark.Tools.Security.Licensing.RunningLicense.LicenseKey">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:IndianaPark.Tools.Security.Licensing.RunningLicense.LicenseKey"]</p>
      </summary>
    </member>
    <member name="T:IndianaPark.Tools.Security.Licensing.SoftwareFeatures">
      <summary>
            Enumerazione delle features che un client può chiedere/che gli possono venire licenziate
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.SoftwareFeatures.None">
      <summary>
            Nessuna funzionalità
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.SoftwareFeatures.Biglietti">
      <summary>
            Emissione generica di biglietti
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.SoftwareFeatures.Percorsi">
      <summary>
            Gestione dei percorsi
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.SoftwareFeatures.PowerFan">
      <summary>
            Gestione del PowerFan
            </summary>
    </member>
    <member name="F:IndianaPark.Tools.Security.Licensing.SoftwareFeatures.Persistence">
      <summary>
            Sistema di persistenza
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.CancelWizardState">
      <summary>
            Stato che rappresenta la richiesta di annullamento dell'operazione
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.CancelWizardState.#ctor(IndianaPark.Tools.Wizard.Wizard,IndianaPark.Tools.Wizard.IState)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.CancelWizardState" /> class.
            </summary>
      <param name="previous">Lo stato da cui viene creato questo stato. Vedi <see cref="!:IWizardState" />.</param>
      <param name="wizard">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wizard"/&gt; documentation for "M:IndianaPark.Tools.Wizard.CancelWizardState.#ctor(IndianaPark.Tools.Wizard.Wizard,IndianaPark.Tools.Wizard.IState)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.CancelWizardState.EnterState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Avvia la gestione dello stato
            </summary>
      <param name="builder">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="builder"/&gt; documentation for "M:IndianaPark.Tools.Wizard.CancelWizardState.EnterState(IndianaPark.Tools.Wizard.IBuilder)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.CancelWizardState.ExitState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Salva i dati acquisiti dallo stato
            </summary>
      <param name="builder">L'oggetto <see cref="!:IWizardBuilder" /> dove salvare i dati</param>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.IBuilder">
      <summary>
            Interfaccia di un costruttore di dati per i wizard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IBuilder.BuildResult">
      <summary>
            Costruisce e restituisce il risultato della costruzione
            </summary>
      <returns>
        <c>true</c> se la funziona ha costruito i dati con successo, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IBuilder.GetResult">
      <summary>
            Restituisce il risultato costruito con <see cref="M:IndianaPark.Tools.Wizard.IBuilder.BuildResult" /></summary>
      <returns>
            L'oggetto costruito, oppure <c>null</c> se <see cref="M:IndianaPark.Tools.Wizard.IBuilder.BuildResult" /> non è mai stata
            chiamata o la sua chiamata ha dato come risultato <c>false</c>.
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.IBuilder.Storage">
      <summary>
            Il contenitore di dati per il Builder dei giblietti
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.IState">
      <summary>
            Rappresenta uno stato dell'automa di Mealy del Wizard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IState.EnterState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Avvia la gestione dello stato. Viene chiamato ogni volta che lo stato diventa quello corrente.
            </summary>
      <param name="builder">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="builder"/&gt; documentation for "M:IndianaPark.Tools.Wizard.IState.EnterState(IndianaPark.Tools.Wizard.IBuilder)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IState.ExitState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Termina l'esecuzione dello stato. Viene chiamato ogni volta che lo stato termina di essere quello corrente
            </summary>
      <param name="builder">L'oggetto <see cref="T:IndianaPark.Tools.Wizard.IBuilder" /> dove salvare i dati</param>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.IState.StatusChangeRequested">
      <summary>
            Avvisa quando lo stato corrente richiedere un cambiamento di stato, per esempio a causa di un input utente.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.IState.Wizard">
      <summary>
            Riferimento all'oggetto <see cref="P:IndianaPark.Tools.Wizard.IState.Wizard" /> che gestisce questo stato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.IStateBuilder">
      <summary>
            Interfaccia che specifica i costruttori di <see cref="T:IndianaPark.Tools.Wizard.IState" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IStateBuilder.Create">
      <summary>
            Crea il nuovo stato del wizard
            </summary>
      <returns>Il nuovo stato del wizard</returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.IStateBuilder.OriginState">
      <summary>
            Utilizzato per impostare lo stato collegato con il nuovo WizardState
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.IStateBuilder.Wizard">
      <summary>
            Riferimento all'oggetto <see cref="P:IndianaPark.Tools.Wizard.IStateBuilder.Wizard" /> che gestisce lo stato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.IUserData">
      <summary>Rappresenta una sorgente di dati utente</summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IUserData.GetData">
      <summary>
            Permette di recuperare i dati utente
            </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Wizard.IUserData.GetData"]</p>
      </returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.IUserData.IsDataValid">
      <summary>
            Indica se i dati sono validi
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.IUserData.SetInformations(System.Object)">
      <summary>
            Fornisce le informazioni necessare per aggiornare il suo stato
            </summary>
      <param name="info">Le informazioni di aggiornamento</param>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.IUserData.UpdateInformations">
      <summary>
            Indica la richiesta da parte del proprietario dei dati di fornirgli dati aggiornati
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.StateBuilder`1">
      <summary>
            Crea un'istanza di un qualsiasi oggetto che implementa <see cref="T:IndianaPark.Tools.Wizard.IState" /> exception che ha un
            costruttore con un unico parametro di tipo <see cref="T:IndianaPark.Tools.Wizard.IState" /> che accetta lo stato
            di provenienza
            </summary>
      <typeparam name="TState">The type of the state.</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.StateBuilder`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.StateBuilder`1" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.StateBuilder`1.#ctor(IndianaPark.Tools.Wizard.IState,IndianaPark.Tools.Wizard.Wizard)">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.StateBuilder`1" /> class</summary>
      <param name="origin">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="origin"/&gt; documentation for "M:IndianaPark.Tools.Wizard.StateBuilder`1.#ctor(IndianaPark.Tools.Wizard.IState,IndianaPark.Tools.Wizard.Wizard)"]</p>
      </param>
      <param name="wizard">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wizard"/&gt; documentation for "M:IndianaPark.Tools.Wizard.StateBuilder`1.#ctor(IndianaPark.Tools.Wizard.IState,IndianaPark.Tools.Wizard.Wizard)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.StateBuilder`1.Create``1">
      <summary>
            Crea un nuovo stato del tipo specificato
            </summary>
      <typeparam name="TState">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TState"/&gt; documentation for "M:IndianaPark.Tools.Wizard.StateBuilder`1.Create``1"]</p>
      </typeparam>
      <returns>
            Il nuovo stato del wizard, oppure <c>null</c> se il tipo <typeparamref name="TState" /> non possiede un
            costruttore il cui unico argomento è <see cref="T:IndianaPark.Tools.Wizard.IState" /></returns>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.StateBuilder`1.Create">
      <summary>
            Crea il nuovo stato del wizard
            </summary>
      <returns>
            Il nuovo stato del wizard, oppure <c>null</c> se il tipo <typeparamref name="TState" /> non possiede un
            costruttore il cui unico argomento è <see cref="T:IndianaPark.Tools.Wizard.IState" /></returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.StateBuilder`1.OriginState">
      <summary>
            Utilizzato per impostare lo stato collegato con il nuovo WizardState
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.StateBuilder`1.Wizard">
      <summary>
            Riferimento all'oggetto <see cref="P:IndianaPark.Tools.Wizard.StateBuilder`1.Wizard" /> che gestisce questo stato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs">
      <summary>
            Classe per passare informazioni all'evento <see cref="E:IndianaPark.Tools.Wizard.IState.StatusChangeRequested" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs.#ctor(IndianaPark.Tools.Navigation.NavigationAction,IndianaPark.Tools.Wizard.IState,IndianaPark.Tools.Wizard.IState)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs" /> class.
            </summary>
      <param name="requestedChange">L'azione che viene richiesto di effettuare</param>
      <param name="previousState">Lo stato precedente a quello corrente.</param>
      <param name="nextState">Lo stato successivo a quello corrente.</param>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs.NextState">
      <summary>
            Lo stato successivo a quello corrente.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs.PreviousState">
      <summary>
            Lo stato precedente a quello corrente.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.StatusChangeRequestedEventArgs.RequestedChange">
      <summary>
            L'azione che viene richiesto di effettuare
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.StatusChangeRequestedHandler">
      <summary>
            Delegato di gestore di evento della richiesta di cambiamento di stato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.Wizard">
      <summary>
            Gestore dei wizard.
            L'oggetto si occupa dell'inizializzazione del wizard, di segnalare mediante eventi la sua terminazione,
            inizializzare e terminare il wizard, exception soprattutto si occupa di cambiare il proprio stato interno. Ogni
            stato rappresenta un passo del wizard.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.Wizard" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.#ctor(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.Wizard" /> class.
            </summary>
      <param name="builder">Il <see cref="T:IndianaPark.Tools.Wizard.IBuilder" /> per la costruzione delle strutture dati finali</param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.#ctor(IndianaPark.Tools.Wizard.IState)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.Wizard" /> class.
            </summary>
      <param name="startState">Lo stato di partenza</param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.#ctor(IndianaPark.Tools.Wizard.IState,IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.Wizard" /> class.
            </summary>
      <param name="startState">Lo stato di partenza</param>
      <param name="builder">Il <see cref="T:IndianaPark.Tools.Wizard.IBuilder" /> per la costruzione delle strutture dati finali</param>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.Wizard.Builder">
      <summary>
            Il <see cref="T:IndianaPark.Tools.Wizard.IBuilder" /> per la costruzione delle strutture dati finali
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.Wizard.CancelState">
      <summary>
            Lo stato a cui passare quando si richiede l'annullamento del Wizard. Se viene 
            impostato a <c>null</c> non viene utilizzato ed il Wizard termina normalmente
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.Wizard.InitialState">
      <summary>
            Imposta lo stato di partenza del Wizard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.OnWizardCompleted(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Genera l'evento per notificare il completamento del Wizard
            </summary>
      <param name="requestedChange">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="requestedChange"/&gt; documentation for "M:IndianaPark.Tools.Wizard.Wizard.OnWizardCompleted(IndianaPark.Tools.Navigation.NavigationAction)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.StartWizard">
      <summary>
            Avvia il Wizard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.Wizard.StartWizard(IndianaPark.Tools.Wizard.IState)">
      <summary>
            Avvia il Wizard
            </summary>
      <param name="initialState">Lo stato di partenza.</param>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.Wizard.WizardCompleted">
      <summary>
            Avvisa quando il Wizard è terminato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.Wizard.WizardCompletedHandler">
      <summary>
            Delegato per il gestore dell'evento <see cref="E:IndianaPark.Tools.Wizard.Wizard.WizardCompleted" /></summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.WizardBuilder`2">
      <summary>
            Generico costruttore di dati per i wizard
            </summary>
      <typeparam name="TStorage">Il tipo di oggetto utilizzato per contenere i dati provvisori</typeparam>
      <typeparam name="TResult">Il tipo di dato del risultato del costruttore</typeparam>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardBuilder`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.WizardBuilder`2" /> class</summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardBuilder`2.BuildResult">
      <summary>
            Costruisce e restituisce il risultato della costruzione
            </summary>
      <returns>
        <c>true</c> se la funziona ha costruito i dati con successo, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardBuilder`2.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardBuilder`2.GetResult">
      <summary>
            Restituisce il risultato costruito con <see cref="M:IndianaPark.Tools.Wizard.IBuilder.BuildResult" /></summary>
      <returns>
            L'oggetto costruito, oppure <c>null</c> se <see cref="M:IndianaPark.Tools.Wizard.IBuilder.BuildResult" /> non è mai stata
            chiamata o la sua chiamata non è riuscita
            </returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardBuilder`2.Storage">
      <summary>
            Il contenitore di dati per il Builder dei biglietti
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.WizardForm">
      <summary>
            Classe astratta che rappresenta una form abilitata alla navigazione all'interno di un Wizard
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.WizardForm" /> class.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.ConvertUserData``1(IndianaPark.Tools.Wizard.IUserData)">
      <summary>
            Converte di dati di una sorgente di dati in un qualsiasi formato desiderato verificando che la
            conversione sia possibile
            </summary>
      <param name="source">Il contenitore dei dati</param>
      <typeparam name="TType">Il tipo di dato in uscita</typeparam>
      <returns>
            Il dato che l'<see cref="T:IndianaPark.Tools.Wizard.IUserData" /> contiene convertito nel tipo corrett.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.GetData">
      <summary>
            Recupera l'input, solitamente dell'utente
            </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:IndianaPark.Tools.Wizard.WizardForm.GetData"]</p>
      </returns>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardForm.IsDataValid">
      <summary>
            Indica se i dati sono validi
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.WizardForm.Navigate">
      <summary>
            Generato quando viene richiesta un'azione di navigazione
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardForm.NavigationStatus">
      <summary>
            Lo stato dell'oggetto navigatore
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.OnUpdateDataRequest">
      <summary>
            Avvia l'evento <see cref="E:IndianaPark.Tools.Wizard.WizardForm.UpdateInformations" /></summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.Sail(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Utilizzato per richiedere al navigatore un'azione di navigazione. Per informazioni su cosa e quali sono le azioni
            di navigazione vedere <see cref="T:IndianaPark.Tools.Navigation.NavigationAction" /></summary>
      <param name="action">Tipo di azione richiesta</param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardForm.SetInformations(System.Object)">
      <summary>
            Fornisce le informazioni necessare per aggiornare il suo stato
            </summary>
      <param name="info">Le informazioni</param>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.WizardForm.UpdateInformations">
      <summary>
            Evento che indica la richiesta da parte della form di aggiornare i suoi dati
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Wizard.WizardState">
      <summary>
            Realizzazione dell'interfaccia <see cref="T:IndianaPark.Tools.Wizard.IState" /> con l'aggiunta di alcune funzioni predefinite
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.#ctor(IndianaPark.Tools.Wizard.Wizard,IndianaPark.Tools.Wizard.IState)">
      <summary>
            Initializes a new instance of the <see cref="T:IndianaPark.Tools.Wizard.WizardState"></see> class.
            </summary>
      <param name="wizard">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="wizard"/&gt; documentation for "M:IndianaPark.Tools.Wizard.WizardState.#ctor(IndianaPark.Tools.Wizard.Wizard,IndianaPark.Tools.Wizard.IState)"]</p>
      </param>
      <param name="previous">The previous.</param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.DataReadyHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)">
      <summary>
            Chiamata quando la finestra grafica ha disponibili i dati. Recupera i dati dalla WizardForm e notifica il cambio di stato.
            </summary>
      <param name="source">The source.</param>
      <param name="exception">The <see cref="T:IndianaPark.Tools.Navigation.NavigationEventArgs" /> instance containing the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:IndianaPark.Tools.Wizard.WizardState.DataReadyHandler(System.Object,IndianaPark.Tools.Navigation.NavigationEventArgs)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.EnterState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Avvia la gestione dello stato. Viene chiamato ogni volta che lo stato diventa quello corrente.
            </summary>
      <param name="builder">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="builder"/&gt; documentation for "M:IndianaPark.Tools.Wizard.WizardState.EnterState(IndianaPark.Tools.Wizard.IBuilder)"]</p>
      </param>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.ExitState(IndianaPark.Tools.Wizard.IBuilder)">
      <summary>
            Termina l'esecuzione dello stato. Viene chiamato ogni volta che lo stato termina di essere quello corrente
            </summary>
      <param name="builder">L'oggetto <see cref="T:IndianaPark.Tools.Wizard.IBuilder" /> dove salvare i dati</param>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardState.NavigationAgent">
      <summary>
            L'oggetto che gestisce la movimentazione tra stati
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardState.NextState">
      <summary>
            Lo stato a cui si viene portati dopo questo
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Wizard.WizardState.OnStatusChangeRequested(IndianaPark.Tools.Navigation.NavigationAction)">
      <summary>
            Chiamato per notificare la disponibilità al cambio di stato
            </summary>
      <param name="requestedChange">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="requestedChange"/&gt; documentation for "M:IndianaPark.Tools.Wizard.WizardState.OnStatusChangeRequested(IndianaPark.Tools.Navigation.NavigationAction)"]</p>
      </param>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardState.PreviousState">
      <summary>
            Lo stato precedente a questo nel wizard
            </summary>
    </member>
    <member name="E:IndianaPark.Tools.Wizard.WizardState.StatusChangeRequested">
      <summary>
            Avvisa quando si è pronti per effettuare il cambio di stato
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardState.UserData">
      <summary>
            L'oggetto da cui attingere i dati inseriti dall'utente
            </summary>
    </member>
    <member name="P:IndianaPark.Tools.Wizard.WizardState.Wizard">
      <summary>
            Riferimento all'oggetto <see cref="P:IndianaPark.Tools.Wizard.WizardState.Wizard" /> che gestisce questo stato
            </summary>
    </member>
    <member name="T:IndianaPark.Tools.Xml.Extensions">
      <summary>
            Classe statica contenente gli Extension Methods personali riguardanti XML
            </summary>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.Deserialize``1(System.Xml.XmlDocument)">
      <summary>
            Deserializza il codice XML in un oggetto
            </summary>
      <param name="data">Un oggetto XmlDocument contenente il codice XML dell'oggetto serializzato</param>
      <typeparam name="T">Il tipo dell'oggetto memorizzato nell'XML</typeparam>
      <returns>
            Un'istanza dell'oggetto costruita deserializzando l'XmlDocument oppure <c>null</c> in caso non sia stato
            possibile deserializzare l'oggetto.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.Deserialize(System.Xml.XmlDocument,System.Type)">
      <summary>
            Deserializza il codice XML in un oggetto
            </summary>
      <param name="data">Un oggetto XmlDocument contenente il codice XML dell'oggetto serializzato</param>
      <param name="type">Il tipo del dato serializzato.</param>
      <returns>Un'istanza dell'oggetto costruita deserializzando l'XmlDocument, oppure <c>null</c> in caso di 
            problemi di deserializzazione</returns>
      <exception cref="T:System.ArgumentNullException">Se non viene passato <paramref name="type" /></exception>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.DeserializeXml``1(System.String)">
      <summary>
            Deserializza il codice XML in un oggetto
            </summary>
      <param name="data">Il codice XML dell'oggetto serializzato</param>
      <typeparam name="T">Il tipo di oggetto contenuto nell'XML</typeparam>
      <returns>
            Un'istanza dell'oggetto costruita deserializzando l'XML, oppure <c>null</c> in caso non sia stato possibile
            deserializzare l'oggetto.
            </returns>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.DeserializeXml(System.String,System.Type)">
      <summary>
            Deserializza il codice XML in un oggetto
            </summary>
      <param name="data">Il codice XML dell'oggetto serializzato</param>
      <param name="type">Il tipo del dato serializzato.</param>
      <returns>
            Un'istanza dell'oggetto costruita deserializzando l'XML
            </returns>
      <exception cref="T:System.ArgumentException">Se <paramref name="data" /> non contiene del codice XML valido.</exception>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.IsValidXML(System.String)">
      <summary>
            Controlla se il testo contiene del codice XML Well-Formed
            </summary>
      <param name="value">La stringa da controllare</param>
      <returns>
        <c>true</c> se la stringa contiene un codice XML Well Formed, <c>false</c> altrimenti.</returns>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.SaveFormatted(System.Xml.XmlDocument,System.String)">
      <summary>
            Salva l'oggetto <see cref="T:System.Xml.XmlDocument" /> in un file utilizzando il formato standard di formattazione exception
            una codifica UTF-16
            </summary>
      <param name="data">L'oggetto da salvare.</param>
      <param name="fileName">Il percorso del file in cui salvare il documento</param>
      <returns>
        <c>true</c> se il salvataggio va a buon fine, <c>false</c> altrimenti</returns>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.ToXml``1(``0)">
      <summary>
            Serializza un qualsiasi oggetto in XML
            </summary>
      <param name="data">L'oggetto da serializzare</param>
      <typeparam name="T">Il tipo di oggetto da serializzare</typeparam>
      <returns>Una stringa contenente il codice XML dell'oggetto <paramref name="data" /> serializzato</returns>
    </member>
    <member name="M:IndianaPark.Tools.Xml.Extensions.ToXmlDocument``1(``0)">
      <summary>
            Serializza un qualsiasi oggetto in un oggetto XmlDocument
            </summary>
      <param name="data">L'oggetto da serializzare</param>
      <typeparam name="T">Il tipo di oggetto da serializzare</typeparam>
      <returns>Un'istanza di XmlDocument contenente il codice XML dell'oggetto <paramref name="data" /> serializzato</returns>
    </member>
    <member name="T:NDesk.Options.Option">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.Option"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.Option.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.Option" /> class</summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.Option.#ctor(System.String,System.String)"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.Option.#ctor(System.String,System.String)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.Option" /> class</summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)"]</p>
      </param>
      <param name="maxValueCount">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="maxValueCount"/&gt; documentation for "M:NDesk.Options.Option.#ctor(System.String,System.String,System.Int32)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.Option.Description">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.Option.Description"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.Option.GetNames">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.GetNames"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.Option.GetNames"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.Option.GetValueSeparators">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.GetValueSeparators"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.Option.GetValueSeparators"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)"]</p>
      </summary>
      <param name="c">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="c"/&gt; documentation for "M:NDesk.Options.Option.Invoke(NDesk.Options.OptionContext)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.Option.MaxValueCount">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.Option.MaxValueCount"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)"]</p>
      </summary>
      <param name="c">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="c"/&gt; documentation for "M:NDesk.Options.Option.OnParseComplete(NDesk.Options.OptionContext)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.Option.OptionValueType">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.Option.OptionValueType"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)"]</p>
      </summary>
      <param name="value">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="value"/&gt; documentation for "M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)"]</p>
      </param>
      <param name="c">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="c"/&gt; documentation for "M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)"]</p>
      </param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)"]</p>
      </typeparam>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.Option.Parse``1(System.String,NDesk.Options.OptionContext)"]</p>
      </returns>
    </member>
    <member name="P:NDesk.Options.Option.Prototype">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.Option.Prototype"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.Option.ToString">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.Option.ToString"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.Option.ToString"]</p>
      </returns>
    </member>
    <member name="T:NDesk.Options.OptionAction`2">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionAction`2"]</p>
      </summary>
      <typeparam name="TKey">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TKey"/&gt; documentation for "T:NDesk.Options.OptionAction`2"]</p>
      </typeparam>
      <typeparam name="TValue">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TValue"/&gt; documentation for "T:NDesk.Options.OptionAction`2"]</p>
      </typeparam>
    </member>
    <member name="T:NDesk.Options.OptionContext">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionContext"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionContext.#ctor(NDesk.Options.OptionSet)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionContext" /> class</summary>
      <param name="set">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="set"/&gt; documentation for "M:NDesk.Options.OptionContext.#ctor(NDesk.Options.OptionSet)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.OptionContext.Option">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionContext.Option"]</p>
      </summary>
    </member>
    <member name="P:NDesk.Options.OptionContext.OptionIndex">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionContext.OptionIndex"]</p>
      </summary>
    </member>
    <member name="P:NDesk.Options.OptionContext.OptionName">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionContext.OptionName"]</p>
      </summary>
    </member>
    <member name="P:NDesk.Options.OptionContext.OptionSet">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionContext.OptionSet"]</p>
      </summary>
    </member>
    <member name="P:NDesk.Options.OptionContext.OptionValues">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionContext.OptionValues"]</p>
      </summary>
    </member>
    <member name="T:NDesk.Options.OptionException">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionException"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionException" /> class</summary>
    </member>
    <member name="M:NDesk.Options.OptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionException" /> class</summary>
      <param name="info">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="info"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"]</p>
      </param>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionException.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionException" /> class</summary>
      <param name="message">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="message"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.String,System.String)"]</p>
      </param>
      <param name="optionName">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="optionName"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.String,System.String)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionException.#ctor(System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionException" /> class</summary>
      <param name="message">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="message"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.String,System.String,System.Exception)"]</p>
      </param>
      <param name="optionName">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="optionName"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.String,System.String,System.Exception)"]</p>
      </param>
      <param name="innerException">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="innerException"/&gt; documentation for "M:NDesk.Options.OptionException.#ctor(System.String,System.String,System.Exception)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"]</p>
      </summary>
      <param name="info">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="info"/&gt; documentation for "M:NDesk.Options.OptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"]</p>
      </param>
      <param name="context">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="context"/&gt; documentation for "M:NDesk.Options.OptionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.OptionException.OptionName">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionException.OptionName"]</p>
      </summary>
    </member>
    <member name="T:NDesk.Options.OptionSet">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionSet"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionSet" /> class</summary>
    </member>
    <member name="M:NDesk.Options.OptionSet.#ctor(System.Converter{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:NDesk.Options.OptionSet" /> class</summary>
      <param name="localizer">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="localizer"/&gt; documentation for "M:NDesk.Options.OptionSet.#ctor(System.Converter{System.String,System.String})"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add(NDesk.Options.Option)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add(NDesk.Options.Option)"]</p>
      </summary>
      <param name="option">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="option"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(NDesk.Options.Option)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add(NDesk.Options.Option)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </param>
      <typeparam name="TKey">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TKey"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </typeparam>
      <typeparam name="TValue">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TValue"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </typeparam>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.Action{System.String})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})"]</p>
      </param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})"]</p>
      </typeparam>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.Action{``0})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,NDesk.Options.OptionAction{System.String,System.String})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </param>
      <typeparam name="TKey">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TKey"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </typeparam>
      <typeparam name="TValue">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="TValue"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </typeparam>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add``2(System.String,System.String,NDesk.Options.OptionAction{``0,``1})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add(System.String,System.String,System.Action{System.String})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </summary>
      <param name="prototype">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="prototype"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </param>
      <param name="description">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="description"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </param>
      <param name="action">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="action"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </param>
      <typeparam name="T">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;typeparam name="T"/&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </typeparam>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Add``1(System.String,System.String,System.Action{``0})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.CreateOptionContext">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.CreateOptionContext"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.CreateOptionContext"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)"]</p>
      </summary>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.GetKeyForItem(NDesk.Options.Option)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.GetOptionForName(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionForName(System.String)"]</p>
      </summary>
      <param name="option">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="option"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionForName(System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionForName(System.String)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </summary>
      <param name="argument">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="argument"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </param>
      <param name="flag">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="flag"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </param>
      <param name="name">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="name"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </param>
      <param name="sep">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="sep"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </param>
      <param name="value">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="value"/&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.GetOptionParts(System.String,System.String@,System.String@,System.String@,System.String@)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)"]</p>
      </summary>
      <param name="index">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="index"/&gt; documentation for "M:NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)"]</p>
      </param>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionSet.InsertItem(System.Int32,NDesk.Options.Option)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.OptionSet.MessageLocalizer">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionSet.MessageLocalizer"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})"]</p>
      </summary>
      <param name="arguments">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="arguments"/&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.Collections.Generic.IEnumerable{System.String})"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)"]</p>
      </summary>
      <param name="argument">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="argument"/&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)"]</p>
      </param>
      <param name="c">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="c"/&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionSet.Parse(System.String,NDesk.Options.OptionContext)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionSet.RemoveItem(System.Int32)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.RemoveItem(System.Int32)"]</p>
      </summary>
      <param name="index">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="index"/&gt; documentation for "M:NDesk.Options.OptionSet.RemoveItem(System.Int32)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)"]</p>
      </summary>
      <param name="index">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="index"/&gt; documentation for "M:NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)"]</p>
      </param>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionSet.SetItem(System.Int32,NDesk.Options.Option)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)"]</p>
      </summary>
      <param name="o">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="o"/&gt; documentation for "M:NDesk.Options.OptionSet.WriteOptionDescriptions(System.IO.TextWriter)"]</p>
      </param>
    </member>
    <member name="T:NDesk.Options.OptionValueCollection">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionValueCollection"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.Add(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.Add(System.String)"]</p>
      </summary>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.Add(System.String)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.Clear">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.Clear"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.Contains(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.Contains(System.String)"]</p>
      </summary>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.Contains(System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.Contains(System.String)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.CopyTo(System.String[],System.Int32)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.CopyTo(System.String[],System.Int32)"]</p>
      </summary>
      <param name="array">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="array"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.CopyTo(System.String[],System.Int32)"]</p>
      </param>
      <param name="arrayIndex">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="arrayIndex"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.CopyTo(System.String[],System.Int32)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.OptionValueCollection.Count">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionValueCollection.Count"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.GetEnumerator">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.GetEnumerator"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.GetEnumerator"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.IndexOf(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.IndexOf(System.String)"]</p>
      </summary>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.IndexOf(System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.IndexOf(System.String)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.Insert(System.Int32,System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.Insert(System.Int32,System.String)"]</p>
      </summary>
      <param name="index">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="index"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.Insert(System.Int32,System.String)"]</p>
      </param>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.Insert(System.Int32,System.String)"]</p>
      </param>
    </member>
    <member name="P:NDesk.Options.OptionValueCollection.IsReadOnly">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionValueCollection.IsReadOnly"]</p>
      </summary>
    </member>
    <member name="P:NDesk.Options.OptionValueCollection.Item(System.Int32)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:NDesk.Options.OptionValueCollection.Item(System.Int32)"]</p>
      </summary>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.Remove(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.Remove(System.String)"]</p>
      </summary>
      <param name="item">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="item"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.Remove(System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.Remove(System.String)"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.RemoveAt(System.Int32)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.RemoveAt(System.Int32)"]</p>
      </summary>
      <param name="index">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="index"/&gt; documentation for "M:NDesk.Options.OptionValueCollection.RemoveAt(System.Int32)"]</p>
      </param>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.ToArray">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToArray"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToArray"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.ToList">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToList"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToList"]</p>
      </returns>
    </member>
    <member name="M:NDesk.Options.OptionValueCollection.ToString">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToString"]</p>
      </summary>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:NDesk.Options.OptionValueCollection.ToString"]</p>
      </returns>
    </member>
    <member name="T:NDesk.Options.OptionValueType">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "T:NDesk.Options.OptionValueType"]</p>
      </summary>
    </member>
    <member name="F:NDesk.Options.OptionValueType.None"></member>
    <member name="F:NDesk.Options.OptionValueType.Optional"></member>
    <member name="F:NDesk.Options.OptionValueType.Required"></member>
    <member name="M:IndianaPark.Tools.Extensions.ToByteArray(System.Object)">
      <summary>
            Serializza un oggetto in un array di bytes
            </summary>
    </member>
    <member name="T:System.SystemCommands">
      <summary>
            Reference: http://www.codeproject.com/KB/cs/Execute_Command_in_CSharp.aspx
            </summary>
    </member>
    <member name="M:System.SystemCommands.ExecuteCommand(System.Object)">
      <summary>
            Executes a shell command synchronously.
            </summary>
      <param name="command">string command</param>
      <returns>string, as output of the command.</returns>
    </member>
    <member name="M:System.SystemCommands.ReadLine(System.String)">
      <summary>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:System.SystemCommands.ReadLine(System.String)"]</p>
      </summary>
      <param name="message">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="message"/&gt; documentation for "M:System.SystemCommands.ReadLine(System.String)"]</p>
      </param>
      <returns>
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:System.SystemCommands.ReadLine(System.String)"]</p>
      </returns>
    </member>
    <member name="T:System.Windows.Forms.PropertyBag">
      <summary>
            Represents a collection of custom properties that can be selected into a
            PropertyGrid to provide functionality beyond that of the simple reflection
            normally used to query an object's properties.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.#ctor">
      <summary>
            Initializes a new instance of the PropertyBag class.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.DefaultProperty">
      <summary>
            Gets or sets the name of the default property in the collection.
            </summary>
    </member>
    <member name="E:System.Windows.Forms.PropertyBag.GetValue">
      <summary>
            Occurs when a PropertyGrid requests the value of a property.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.OnGetValue(System.Windows.Forms.PropertySpecEventArgs)">
      <summary>
            Raises the GetValue event.
            </summary>
      <param name="exception">A PropertySpecEventArgs that contains the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:System.Windows.Forms.PropertyBag.OnGetValue(System.Windows.Forms.PropertySpecEventArgs)"]</p>
      </param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.OnSetValue(System.Windows.Forms.PropertySpecEventArgs)">
      <summary>
            Raises the SetValue event.
            </summary>
      <param name="exception">A PropertySpecEventArgs that contains the event data.</param>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:System.Windows.Forms.PropertyBag.OnSetValue(System.Windows.Forms.PropertySpecEventArgs)"]</p>
      </param>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.Properties">
      <summary>
            Gets the collection of properties contained within this PropertyBag.
            </summary>
    </member>
    <member name="E:System.Windows.Forms.PropertyBag.SetValue">
      <summary>
            Occurs when the user changes the value of a property in a PropertyGrid.
            </summary>
    </member>
    <member name="T:System.Windows.Forms.PropertyBag.PropertySpecCollection">
      <summary>
            Encapsulates a collection of PropertySpec objects.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.#ctor">
      <summary>
            Initializes a new instance of the PropertySpecCollection class.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Add(System.Windows.Forms.PropertySpec)">
      <summary>
            Adds a PropertySpec to the end of the PropertySpecCollection.
            </summary>
      <param name="value">The PropertySpec to be added to the end of the PropertySpecCollection.</param>
      <returns>The PropertySpecCollection index at which the value has been added.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.AddRange(System.Windows.Forms.PropertySpec[])">
      <summary>
            Adds the elements of an array of PropertySpec objects to the end of the PropertySpecCollection.
            </summary>
      <param name="array">The PropertySpec array whose elements should be added to the end of the
            PropertySpecCollection.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Clear">
      <summary>
            Removes all elements from the PropertySpecCollection.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Contains(System.String)">
      <summary>
            Determines whether a PropertySpec with the specified name is in the PropertySpecCollection.
            </summary>
      <param name="name">The name of the PropertySpec to locate in the PropertySpecCollection.</param>
      <returns>true if item is found in the PropertySpecCollection; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Contains(System.Windows.Forms.PropertySpec)">
      <summary>
            Determines whether a PropertySpec is in the PropertySpecCollection.
            </summary>
      <param name="item">The PropertySpec to locate in the PropertySpecCollection. The element to locate
            can be a null reference (Nothing in Visual Basic).</param>
      <returns>true if item is found in the PropertySpecCollection; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.CopyTo(System.Windows.Forms.PropertySpec[])">
      <summary>
            Copies the entire PropertySpecCollection to a compatible one-dimensional Array, starting at the
            beginning of the target array.
            </summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied
            from PropertySpecCollection. The Array must have zero-based indexing.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.CopyTo(System.Windows.Forms.PropertySpec[],System.Int32)">
      <summary>
            Copies the PropertySpecCollection or a portion of it to a one-dimensional array.
            </summary>
      <param name="array">The one-dimensional Array that is the destination of the elements copied
            from the collection.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.PropertySpecCollection.Count">
      <summary>
            Gets the number of elements in the PropertySpecCollection.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through the PropertySpecCollection.
            </summary>
      <returns>An IEnumerator for the entire PropertySpecCollection.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.IndexOf(System.String)">
      <summary>
            Searches for the PropertySpec with the specified name and returns the zero-based index of
            the first occurrence within the entire PropertySpecCollection.
            </summary>
      <param name="name">The name of the PropertySpec to locate in the PropertySpecCollection.</param>
      <returns>The zero-based index of the first occurrence of value within the entire PropertySpecCollection,
            if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.IndexOf(System.Windows.Forms.PropertySpec)">
      <summary>
            Searches for the specified PropertySpec and returns the zero-based index of the first
            occurrence within the entire PropertySpecCollection.
            </summary>
      <param name="value">The PropertySpec to locate in the PropertySpecCollection.</param>
      <returns>The zero-based index of the first occurrence of value within the entire PropertySpecCollection,
            if found; otherwise, -1.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Insert(System.Int32,System.Windows.Forms.PropertySpec)">
      <summary>
            Inserts a PropertySpec object into the PropertySpecCollection at the specified index.
            </summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The PropertySpec to insert.</param>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.PropertySpecCollection.IsFixedSize">
      <summary>
            Gets a value indicating whether the PropertySpecCollection has a fixed size.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.PropertySpecCollection.IsReadOnly">
      <summary>
            Gets a value indicating whether the PropertySpecCollection is read-only.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.PropertySpecCollection.IsSynchronized">
      <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyBag.PropertySpecCollection.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            In C#, this property is the indexer for the PropertySpecCollection class.
            </summary>
      <param name="index">The zero-based index of the element to get or set.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Remove(System.String)">
      <summary>
            Removes the property with the specified name from the PropertySpecCollection.
            </summary>
      <param name="name">The name of the PropertySpec to remove from the PropertySpecCollection.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.Remove(System.Windows.Forms.PropertySpec)">
      <summary>
            Removes the first occurrence of a specific object from the PropertySpecCollection.
            </summary>
      <param name="obj">The PropertySpec to remove from the PropertySpecCollection.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the object at the specified index of the PropertySpecCollection.
            </summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertyBag.PropertySpecCollection.ToArray">
      <summary>
            Copies the elements of the PropertySpecCollection to a new PropertySpec array.
            </summary>
      <returns>A PropertySpec array containing copies of the elements of the PropertySpecCollection.</returns>
    </member>
    <member name="T:System.Windows.Forms.PropertySpec">
      <summary>
            Represents a single property in a PropertySpec.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.String,System.Type)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Type,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.String,System.String,System.String,System.Object,System.Type,System.Type)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">The fully qualified name of the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="category"/&gt; documentation for "M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String)"]</p>
      </param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.String,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.String,System.Type)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The fully qualified name of the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.Type,System.String)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The fully qualified name of the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="M:System.Windows.Forms.PropertySpec.#ctor(System.String,System.Type,System.String,System.String,System.Object,System.Type,System.Type)">
      <summary>
            Initializes a new instance of the PropertySpec class.
            </summary>
      <param name="name">The name of the property displayed in the property grid.</param>
      <param name="type">A Type that represents the type of the property.</param>
      <param name="category">The category under which the property is displayed in the
            property grid.</param>
      <param name="description">A string that is displayed in the help area of the
            property grid.</param>
      <param name="defaultValue">The default value of the property, or null if there is
            no default value.</param>
      <param name="editor">The Type that represents the type of the editor for this
            property.  This type must derive from UITypeEditor.</param>
      <param name="typeConverter">The Type that represents the type of the type
            converter for this property.  This type must derive from TypeConverter.</param>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.Attributes">
      <summary>
            Gets or sets a collection of additional Attributes for this property.  This can
            be used to specify attributes beyond those supported intrinsically by the
            PropertySpec class, such as ReadOnly and Browsable.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.Category">
      <summary>
            Gets or sets the category name of this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.ConverterTypeName">
      <summary>
            Gets or sets the fully qualified name of the type converter
            type for this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.DefaultValue">
      <summary>
            Gets or sets the default value of this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.Description">
      <summary>
            Gets or sets the help text description of this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.EditorTypeName">
      <summary>
            Gets or sets the fully qualified name of the editor type for
            this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.Name">
      <summary>
            Gets or sets the name of this property.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpec.TypeName">
      <summary>
            Gets or sets the fully qualfied name of the type of this
            property.
            </summary>
    </member>
    <member name="T:System.Windows.Forms.PropertySpecEventArgs">
      <summary>
            Provides data for the GetValue and SetValue events of the PropertyBag class.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertySpecEventArgs.#ctor(System.Windows.Forms.PropertySpec,System.Object)">
      <summary>
            Initializes a new instance of the PropertySpecEventArgs class.
            </summary>
      <param name="property">The PropertySpec that represents the property whose
            value is being requested or set.</param>
      <param name="val">The current value of the property.</param>
    </member>
    <member name="P:System.Windows.Forms.PropertySpecEventArgs.Property">
      <summary>
            Gets the PropertySpec that represents the property whose value is being
            requested or set.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertySpecEventArgs.Value">
      <summary>
            Gets or sets the current value of the property.
            </summary>
    </member>
    <member name="T:System.Windows.Forms.PropertySpecEventHandler">
      <summary>
            Represents the method that will handle the GetValue and SetValue events of the
            PropertyBag class.
            </summary>
    </member>
    <member name="T:System.Windows.Forms.PropertyTable">
      <summary>
            An extension of PropertyBag that manages a table of property values, in
            addition to firing events when property values are requested or set.
            </summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyTable.#ctor">
      <summary>
            Initializes a new instance of the PropertyTable class.
            </summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyTable.Item(System.String)">
      <summary>
            Gets or sets the value of the property with the specified name.
            <p>In C#, this property is the indexer of the PropertyTable class.</p></summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyTable.OnGetValue(System.Windows.Forms.PropertySpecEventArgs)">
      <summary>
            This member overrides PropertyBag.OnGetValue.
            </summary>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:System.Windows.Forms.PropertyTable.OnGetValue(System.Windows.Forms.PropertySpecEventArgs)"]</p>
      </param>
    </member>
    <member name="M:System.Windows.Forms.PropertyTable.OnSetValue(System.Windows.Forms.PropertySpecEventArgs)">
      <summary>
            This member overrides PropertyBag.OnSetValue.
            </summary>
      <param name="e">
        <p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="e"/&gt; documentation for "M:System.Windows.Forms.PropertyTable.OnSetValue(System.Windows.Forms.PropertySpecEventArgs)"]</p>
      </param>
    </member>
  </members>
</doc>