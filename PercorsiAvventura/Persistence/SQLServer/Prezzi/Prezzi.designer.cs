#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:2.0.50727.4016
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IndianaPark.PercorsiAvventura.Persistence.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="indianapark")]
	public partial class PrezziDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertListinoPrezzi(ListinoPrezzi instance);
    partial void UpdateListinoPrezzi(ListinoPrezzi instance);
    partial void DeleteListinoPrezzi(ListinoPrezzi instance);
    partial void InsertClientiPerBiglietto(ClientiPerBiglietto instance);
    partial void UpdateClientiPerBiglietto(ClientiPerBiglietto instance);
    partial void DeleteClientiPerBiglietto(ClientiPerBiglietto instance);
    partial void InsertTipiCliente(TipiCliente instance);
    partial void UpdateTipiCliente(TipiCliente instance);
    partial void DeleteTipiCliente(TipiCliente instance);
    partial void InsertTipiBiglietto(TipiBiglietto instance);
    partial void UpdateTipiBiglietto(TipiBiglietto instance);
    partial void DeleteTipiBiglietto(TipiBiglietto instance);
    #endregion
		
		public PrezziDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrezziDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrezziDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PrezziDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ListinoPrezzi> ListinoPrezzi
		{
			get
			{
				return this.GetTable<ListinoPrezzi>();
			}
		}
		
		public System.Data.Linq.Table<ClientiPerBiglietto> ClientiPerBiglietto
		{
			get
			{
				return this.GetTable<ClientiPerBiglietto>();
			}
		}
		
		public System.Data.Linq.Table<TipiCliente> TipiCliente
		{
			get
			{
				return this.GetTable<TipiCliente>();
			}
		}
		
		public System.Data.Linq.Table<TipiBiglietto> TipiBiglietto
		{
			get
			{
				return this.GetTable<TipiBiglietto>();
			}
		}
	}
	
	[Table(Name="dbo.model_listino_prezzi")]
	public partial class ListinoPrezzi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ModelKey;
		
		private string _Nome;
		
		private decimal _Prezzo;
		
		private string _TipoBiglietto;
		
		private string _TipoCliente;
		
		private EntityRef<TipiCliente> _TipiCliente;
		
		private EntityRef<TipiBiglietto> _TipiBiglietto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelKeyChanging(string value);
    partial void OnModelKeyChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnPrezzoChanging(decimal value);
    partial void OnPrezzoChanged();
    partial void OnTipoBigliettoChanging(string value);
    partial void OnTipoBigliettoChanged();
    partial void OnTipoClienteChanging(string value);
    partial void OnTipoClienteChanged();
    #endregion
		
		public ListinoPrezzi()
		{
			this._TipiCliente = default(EntityRef<TipiCliente>);
			this._TipiBiglietto = default(EntityRef<TipiBiglietto>);
			OnCreated();
		}
		
		[Column(Name="model_key", Storage="_ModelKey", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModelKey
		{
			get
			{
				return this._ModelKey;
			}
			set
			{
				if ((this._ModelKey != value))
				{
					this.OnModelKeyChanging(value);
					this.SendPropertyChanging();
					this._ModelKey = value;
					this.SendPropertyChanged("ModelKey");
					this.OnModelKeyChanged();
				}
			}
		}
		
		[Column(Name="nome", Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Name="prezzo", Storage="_Prezzo", DbType="Decimal(18,2) NOT NULL")]
		public decimal Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[Column(Name="tipo_biglietto", Storage="_TipoBiglietto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		private string TipoBiglietto
		{
			get
			{
				return this._TipoBiglietto;
			}
			set
			{
				if ((this._TipoBiglietto != value))
				{
					this.OnTipoBigliettoChanging(value);
					this.SendPropertyChanging();
					this._TipoBiglietto = value;
					this.SendPropertyChanged("TipoBiglietto");
					this.OnTipoBigliettoChanged();
				}
			}
		}
		
		[Column(Name="tipo_cliente", Storage="_TipoCliente", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		private string TipoCliente
		{
			get
			{
				return this._TipoCliente;
			}
			set
			{
				if ((this._TipoCliente != value))
				{
					this.OnTipoClienteChanging(value);
					this.SendPropertyChanging();
					this._TipoCliente = value;
					this.SendPropertyChanged("TipoCliente");
					this.OnTipoClienteChanged();
				}
			}
		}
		
		[Association(Name="TipiCliente_ListinoPrezzi", Storage="_TipiCliente", ThisKey="TipoCliente", OtherKey="ModelKey", IsForeignKey=true)]
		public TipiCliente TipiCliente
		{
			get
			{
				return this._TipiCliente.Entity;
			}
			set
			{
				TipiCliente previousValue = this._TipiCliente.Entity;
				if (((previousValue != value) 
							|| (this._TipiCliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipiCliente.Entity = null;
						previousValue.ListinoPrezzi.Remove(this);
					}
					this._TipiCliente.Entity = value;
					if ((value != null))
					{
						value.ListinoPrezzi.Add(this);
						this._TipoCliente = value.ModelKey;
					}
					else
					{
						this._TipoCliente = default(string);
					}
					this.SendPropertyChanged("TipiCliente");
				}
			}
		}
		
		[Association(Name="TipiBiglietto_ListinoPrezzi", Storage="_TipiBiglietto", ThisKey="TipoBiglietto", OtherKey="ModelKey", IsForeignKey=true)]
		public TipiBiglietto TipiBiglietto
		{
			get
			{
				return this._TipiBiglietto.Entity;
			}
			set
			{
				TipiBiglietto previousValue = this._TipiBiglietto.Entity;
				if (((previousValue != value) 
							|| (this._TipiBiglietto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipiBiglietto.Entity = null;
						previousValue.ListinoPrezzi.Remove(this);
					}
					this._TipiBiglietto.Entity = value;
					if ((value != null))
					{
						value.ListinoPrezzi.Add(this);
						this._TipoBiglietto = value.ModelKey;
					}
					else
					{
						this._TipoBiglietto = default(string);
					}
					this.SendPropertyChanged("TipiBiglietto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.model_biglietti_clienti")]
	public partial class ClientiPerBiglietto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TipoBiglietto;
		
		private string _TipoCliente;
		
		private EntityRef<TipiCliente> _TipiCliente;
		
		private EntityRef<TipiBiglietto> _TipiBiglietto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTipoBigliettoChanging(string value);
    partial void OnTipoBigliettoChanged();
    partial void OnTipoClienteChanging(string value);
    partial void OnTipoClienteChanged();
    #endregion
		
		public ClientiPerBiglietto()
		{
			this._TipiCliente = default(EntityRef<TipiCliente>);
			this._TipiBiglietto = default(EntityRef<TipiBiglietto>);
			OnCreated();
		}
		
		[Column(Name="tipo_biglietto", Storage="_TipoBiglietto", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		private string TipoBiglietto
		{
			get
			{
				return this._TipoBiglietto;
			}
			set
			{
				if ((this._TipoBiglietto != value))
				{
					this.OnTipoBigliettoChanging(value);
					this.SendPropertyChanging();
					this._TipoBiglietto = value;
					this.SendPropertyChanged("TipoBiglietto");
					this.OnTipoBigliettoChanged();
				}
			}
		}
		
		[Column(Name="tipo_cliente", Storage="_TipoCliente", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		private string TipoCliente
		{
			get
			{
				return this._TipoCliente;
			}
			set
			{
				if ((this._TipoCliente != value))
				{
					this.OnTipoClienteChanging(value);
					this.SendPropertyChanging();
					this._TipoCliente = value;
					this.SendPropertyChanged("TipoCliente");
					this.OnTipoClienteChanged();
				}
			}
		}
		
		[Association(Name="TipiCliente_ClientiPerBiglietto", Storage="_TipiCliente", ThisKey="TipoCliente", OtherKey="ModelKey", IsForeignKey=true)]
		public TipiCliente TipiCliente
		{
			get
			{
				return this._TipiCliente.Entity;
			}
			set
			{
				TipiCliente previousValue = this._TipiCliente.Entity;
				if (((previousValue != value) 
							|| (this._TipiCliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipiCliente.Entity = null;
						previousValue.ClientiPerBiglietto.Remove(this);
					}
					this._TipiCliente.Entity = value;
					if ((value != null))
					{
						value.ClientiPerBiglietto.Add(this);
						this._TipoCliente = value.ModelKey;
					}
					else
					{
						this._TipoCliente = default(string);
					}
					this.SendPropertyChanged("TipiCliente");
				}
			}
		}
		
		[Association(Name="TipiBiglietto_ClientiPerBiglietto", Storage="_TipiBiglietto", ThisKey="TipoBiglietto", OtherKey="ModelKey", IsForeignKey=true)]
		public TipiBiglietto TipiBiglietto
		{
			get
			{
				return this._TipiBiglietto.Entity;
			}
			set
			{
				TipiBiglietto previousValue = this._TipiBiglietto.Entity;
				if (((previousValue != value) 
							|| (this._TipiBiglietto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipiBiglietto.Entity = null;
						previousValue.ClientiPerBiglietto.Remove(this);
					}
					this._TipiBiglietto.Entity = value;
					if ((value != null))
					{
						value.ClientiPerBiglietto.Add(this);
						this._TipoBiglietto = value.ModelKey;
					}
					else
					{
						this._TipoBiglietto = default(string);
					}
					this.SendPropertyChanged("TipiBiglietto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.model_tipi_cliente")]
	public partial class TipiCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ModelKey;
		
		private string _Nome;
		
		private string _TipoBriefing;
		
		private System.DateTime _DurataBiglietto;
		
		private EntitySet<ListinoPrezzi> _ListinoPrezzi;
		
		private EntitySet<ClientiPerBiglietto> _ClientiPerBiglietto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelKeyChanging(string value);
    partial void OnModelKeyChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTipoBriefingChanging(string value);
    partial void OnTipoBriefingChanged();
    partial void OnDurataBigliettoChanging(System.DateTime value);
    partial void OnDurataBigliettoChanged();
    #endregion
		
		public TipiCliente()
		{
			this._ListinoPrezzi = new EntitySet<ListinoPrezzi>(new Action<ListinoPrezzi>(this.attach_ListinoPrezzi), new Action<ListinoPrezzi>(this.detach_ListinoPrezzi));
			this._ClientiPerBiglietto = new EntitySet<ClientiPerBiglietto>(new Action<ClientiPerBiglietto>(this.attach_ClientiPerBiglietto), new Action<ClientiPerBiglietto>(this.detach_ClientiPerBiglietto));
			OnCreated();
		}
		
		[Column(Name="model_key", Storage="_ModelKey", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModelKey
		{
			get
			{
				return this._ModelKey;
			}
			set
			{
				if ((this._ModelKey != value))
				{
					this.OnModelKeyChanging(value);
					this.SendPropertyChanging();
					this._ModelKey = value;
					this.SendPropertyChanged("ModelKey");
					this.OnModelKeyChanged();
				}
			}
		}
		
		[Column(Name="nome", Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Name="tipo_briefing", Storage="_TipoBriefing", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TipoBriefing
		{
			get
			{
				return this._TipoBriefing;
			}
			set
			{
				if ((this._TipoBriefing != value))
				{
					this.OnTipoBriefingChanging(value);
					this.SendPropertyChanging();
					this._TipoBriefing = value;
					this.SendPropertyChanged("TipoBriefing");
					this.OnTipoBriefingChanged();
				}
			}
		}
		
		[Column(Name="durata_biglietto", Storage="_DurataBiglietto", DbType="DateTime NOT NULL")]
		public System.DateTime DurataBiglietto
		{
			get
			{
				return this._DurataBiglietto;
			}
			set
			{
				if ((this._DurataBiglietto != value))
				{
					this.OnDurataBigliettoChanging(value);
					this.SendPropertyChanging();
					this._DurataBiglietto = value;
					this.SendPropertyChanged("DurataBiglietto");
					this.OnDurataBigliettoChanged();
				}
			}
		}
		
		[Association(Name="TipiCliente_ListinoPrezzi", Storage="_ListinoPrezzi", ThisKey="ModelKey", OtherKey="TipoCliente")]
		public EntitySet<ListinoPrezzi> ListinoPrezzi
		{
			get
			{
				return this._ListinoPrezzi;
			}
			set
			{
				this._ListinoPrezzi.Assign(value);
			}
		}
		
		[Association(Name="TipiCliente_ClientiPerBiglietto", Storage="_ClientiPerBiglietto", ThisKey="ModelKey", OtherKey="TipoCliente")]
		public EntitySet<ClientiPerBiglietto> ClientiPerBiglietto
		{
			get
			{
				return this._ClientiPerBiglietto;
			}
			set
			{
				this._ClientiPerBiglietto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ListinoPrezzi(ListinoPrezzi entity)
		{
			this.SendPropertyChanging();
			entity.TipiCliente = this;
		}
		
		private void detach_ListinoPrezzi(ListinoPrezzi entity)
		{
			this.SendPropertyChanging();
			entity.TipiCliente = null;
		}
		
		private void attach_ClientiPerBiglietto(ClientiPerBiglietto entity)
		{
			this.SendPropertyChanging();
			entity.TipiCliente = this;
		}
		
		private void detach_ClientiPerBiglietto(ClientiPerBiglietto entity)
		{
			this.SendPropertyChanging();
			entity.TipiCliente = null;
		}
	}
	
	[Table(Name="dbo.model_tipi_biglietto")]
	public partial class TipiBiglietto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ModelKey;
		
		private string _Nome;
		
		private bool _IsAbbonamento;
		
		private string _ScontoComitiva;
		
		private EntitySet<ListinoPrezzi> _ListinoPrezzi;
		
		private EntitySet<ClientiPerBiglietto> _ClientiPerBiglietto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModelKeyChanging(string value);
    partial void OnModelKeyChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnIsAbbonamentoChanging(bool value);
    partial void OnIsAbbonamentoChanged();
    partial void OnScontoComitivaChanging(string value);
    partial void OnScontoComitivaChanged();
    #endregion
		
		public TipiBiglietto()
		{
			this._ListinoPrezzi = new EntitySet<ListinoPrezzi>(new Action<ListinoPrezzi>(this.attach_ListinoPrezzi), new Action<ListinoPrezzi>(this.detach_ListinoPrezzi));
			this._ClientiPerBiglietto = new EntitySet<ClientiPerBiglietto>(new Action<ClientiPerBiglietto>(this.attach_ClientiPerBiglietto), new Action<ClientiPerBiglietto>(this.detach_ClientiPerBiglietto));
			OnCreated();
		}
		
		[Column(Name="model_key", Storage="_ModelKey", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ModelKey
		{
			get
			{
				return this._ModelKey;
			}
			set
			{
				if ((this._ModelKey != value))
				{
					this.OnModelKeyChanging(value);
					this.SendPropertyChanging();
					this._ModelKey = value;
					this.SendPropertyChanged("ModelKey");
					this.OnModelKeyChanged();
				}
			}
		}
		
		[Column(Name="nome", Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Name="abbonamento", Storage="_IsAbbonamento", DbType="Bit NOT NULL")]
		public bool IsAbbonamento
		{
			get
			{
				return this._IsAbbonamento;
			}
			set
			{
				if ((this._IsAbbonamento != value))
				{
					this.OnIsAbbonamentoChanging(value);
					this.SendPropertyChanging();
					this._IsAbbonamento = value;
					this.SendPropertyChanged("IsAbbonamento");
					this.OnIsAbbonamentoChanged();
				}
			}
		}
		
		[Column(Name="sconto_comitiva", Storage="_ScontoComitiva", DbType="VarChar(50)")]
		public string ScontoComitiva
		{
			get
			{
				return this._ScontoComitiva;
			}
			set
			{
				if ((this._ScontoComitiva != value))
				{
					this.OnScontoComitivaChanging(value);
					this.SendPropertyChanging();
					this._ScontoComitiva = value;
					this.SendPropertyChanged("ScontoComitiva");
					this.OnScontoComitivaChanged();
				}
			}
		}
		
		[Association(Name="TipiBiglietto_ListinoPrezzi", Storage="_ListinoPrezzi", ThisKey="ModelKey", OtherKey="TipoBiglietto")]
		public EntitySet<ListinoPrezzi> ListinoPrezzi
		{
			get
			{
				return this._ListinoPrezzi;
			}
			set
			{
				this._ListinoPrezzi.Assign(value);
			}
		}
		
		[Association(Name="TipiBiglietto_ClientiPerBiglietto", Storage="_ClientiPerBiglietto", ThisKey="ModelKey", OtherKey="TipoBiglietto")]
		public EntitySet<ClientiPerBiglietto> ClientiPerBiglietto
		{
			get
			{
				return this._ClientiPerBiglietto;
			}
			set
			{
				this._ClientiPerBiglietto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ListinoPrezzi(ListinoPrezzi entity)
		{
			this.SendPropertyChanging();
			entity.TipiBiglietto = this;
		}
		
		private void detach_ListinoPrezzi(ListinoPrezzi entity)
		{
			this.SendPropertyChanging();
			entity.TipiBiglietto = null;
		}
		
		private void attach_ClientiPerBiglietto(ClientiPerBiglietto entity)
		{
			this.SendPropertyChanging();
			entity.TipiBiglietto = this;
		}
		
		private void detach_ClientiPerBiglietto(ClientiPerBiglietto entity)
		{
			this.SendPropertyChanging();
			entity.TipiBiglietto = null;
		}
	}
}
#pragma warning restore 1591
